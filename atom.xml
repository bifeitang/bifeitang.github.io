<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://bifeitang.github.io</id>
    <title>Yang&#39;s Blog</title>
    <subtitle></subtitle>
    <icon>https://bifeitang.github.io/images/favicon.ico</icon>
    <link href="https://bifeitang.github.io" />
    <author>
      <name>Yang Hu</name>
    </author>
    <updated>2021-08-16T03:19:05.968Z</updated>
    <entry>
        <id>https://bifeitang.github.io/2021/08/15/ExoSkeleton/StateMachine/</id>
        <title></title>
        <link rel="alternate" href="https://bifeitang.github.io/2021/08/15/ExoSkeleton/StateMachine/"/>
        <content type="html">&lt;h2 id=&#34;freertos-main-controller&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#freertos-main-controller&#34;&gt;#&lt;/a&gt; FreeRTOS Main Controller&lt;/h2&gt;
&lt;h3 id=&#34;design-principles&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#design-principles&#34;&gt;#&lt;/a&gt; Design Principles&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Don&#39;t starve the tasks
&lt;ul&gt;
&lt;li&gt;Using  &lt;code&gt;vTaskDelay&lt;/code&gt;  to block high priority tasks so that the lower priorities ones get chance to execute.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Using global variable is not encouraged in FreeRTOS.  Prefer usage of  &lt;code&gt;static&lt;/code&gt;  variable like private in C++.&lt;/li&gt;
&lt;li&gt;Idle Task (keep the counter)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;state-machine&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#state-machine&#34;&gt;#&lt;/a&gt; State Machine&lt;/h3&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;state_func_t&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;uint8_t&lt;/span&gt; CUR_STATE_ELAPSED_MS &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;state_func_t&lt;/span&gt; state_func &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; null&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;StateInit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;StateWalk&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;StateStand&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;StateSit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;StateFreeze&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;StateErr&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// Each error with an error code in lookup table, e.g. timeout&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;SetNxtState&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;state_func_t&lt;/span&gt; func&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;state_func_t&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;GetNxtState&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;StateWalk&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 1. set CUR_STATE_ELAPSED_MS by calling xTaskGetTickCount(), check if timeout&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 2. send commands, then SetNxtState(StateStand)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 3. or gets interrrupted by emergency, then SetNxtState(StateFreeze)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;SetNxtState&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;state_func_t&lt;/span&gt; func&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 1. set CUR_STATE_ELAPSED_MS = 0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;// 2. state_func = func&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token class-name&#34;&gt;state_func_t&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;GetNxtState&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; state_func&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;StateMachineTask&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;xParameter&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; params&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;SetNxtState&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;StateInit&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;GetNxtState&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;xTaskDelay&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;common-practices&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#common-practices&#34;&gt;#&lt;/a&gt; Common Practices&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Using switch statement&lt;/strong&gt;&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDY2ODUyOTIvc3RhdGUtbWFjaGluZS1wcm9ncmFtLWRlc2lnbi1pbi1mcmVlcnRvcy12dGFza3N0YXJ0c2NoZWR1bGVyLWluLWEtc3dpdGNoLXN0YXRl&#34;&gt;https://stackoverflow.com/questions/46685292/state-machine-program-design-in-freertos-vtaskstartscheduler-in-a-switch-state&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Without using switch statement
&lt;ul&gt;
&lt;li&gt;Each function only needs to know two things
&lt;ul&gt;
&lt;li&gt;What needs to do in this state&lt;/li&gt;
&lt;li&gt;What is next state&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Benefits comparing with  &lt;code&gt;switch&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;Separate the state transfer form a centralized to distributed functions&lt;/li&gt;
&lt;li&gt;No matter how complex the state transfer is, each&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;test-bench&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#test-bench&#34;&gt;#&lt;/a&gt; Test Bench&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;LabWindows/CVI&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubmkuY29tL2VuLXVzL3N1cHBvcnQvZG93bmxvYWRzL3NvZnR3YXJlLXByb2R1Y3RzL2Rvd25sb2FkLmxhYndpbmRvd3MtY3ZpLmh0bWwjMzUzNjAz&#34;&gt;https://www.ni.com/en-us/support/downloads/software-products/download.labwindows-cvi.html#353603&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <updated>2021-08-16T03:19:05.968Z</updated>
    </entry>
    <entry>
        <id>https://bifeitang.github.io/2021/08/15/ExoSkeleton/Questions/</id>
        <title></title>
        <link rel="alternate" href="https://bifeitang.github.io/2021/08/15/ExoSkeleton/Questions/"/>
        <content type="html">&lt;h2 id=&#34;enviornment&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#enviornment&#34;&gt;#&lt;/a&gt; Enviornment&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Q1&lt;/strong&gt;: How fundimentally the two adds-on are different?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201214013454316.png&#34; alt=&#34;image-20201214013454316&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Matlab&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HalCoGen  &lt;code&gt;v04.07.01&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Code Composer Studio Tool Chain:  &lt;code&gt;C:\ti\ccs1011\ccs\tools\compiler\ti-cgt-arm_5.2.9&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Q2&lt;/strong&gt;: How Simulink code gets compiled and linked with tools provided above and then load to the Hercules board?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;code&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#code&#34;&gt;#&lt;/a&gt; Code&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Q3&lt;/strong&gt;: Why this  &lt;code&gt;No rule to make target C:/Program, needed by updown.obj&lt;/code&gt;  come up every first time open the simulink or switch from CCS to Matlab?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201214011201751.png&#34; alt=&#34;image-20201214011201751&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Q4&lt;/strong&gt;: Why the code working in CCS but not in Matlab Simulink? What can cause the problem?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;code-composer-studio&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#code-composer-studio&#34;&gt;#&lt;/a&gt; Code Composer Studio&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Code&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201214014418829.png&#34; alt=&#34;image-20201214014418829&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Running in CCS&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201214014625695.png&#34; alt=&#34;image-20201214014625695&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201214014915756.png&#34; alt=&#34;image-20201214014915756&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I am not using  &lt;code&gt;printf&lt;/code&gt;  here sinc I had some issue with configuration of section  &lt;code&gt;.cio&lt;/code&gt;  for file  &lt;code&gt;HL_sys_link.cmd&lt;/code&gt; , it would  be good if there&#39;s any insight.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Same code running in Simulink&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Simulink Model&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201214015247520.png&#34; alt=&#34;image-20201214015247520&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Following is what&#39;s inside of the code block&lt;/p&gt;
&lt;figure class=&#34;highlight matlab&#34;&gt;&lt;figcaption data-lang=&#34;MATLAB&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;canID&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; nBytes&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;CANread&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;canID &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;uint32&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;nan&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;uint8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;nan&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;nBytes &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;uint8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;nan&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;strcmp&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;coder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;target&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;rtw&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;    &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    coder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;ceval&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;HerculesCANRead&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;coder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;wref&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;canID&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;coder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;wref&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;coder&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;wref&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;nBytes&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;canID %u&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; canID&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;fprintf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;nBytes %u&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; nBytes&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;HerculesCANRead&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;uint32_t&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; canID&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;uint8_t&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;uint8_t&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt; nBytes&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;canInit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;canIsRxMessageArrived&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;canREG1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; canMESSAGE_BOX2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;canGetData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;canREG1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; canMESSAGE_BOX2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;canID &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;canGetID&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;canREG1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; canMESSAGE_BOX2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;nBytes &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; canREG1&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;IF2MCTL &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0xFU&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Note that the CANWrite works with no problem like following.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201214020304346.png&#34; alt=&#34;image-20201214020304346&#34; /&gt;&lt;/p&gt;
</content>
        <updated>2021-08-16T03:19:05.951Z</updated>
    </entry>
    <entry>
        <id>https://bifeitang.github.io/2021/08/15/ExoSkeleton/MainControllerTasks/</id>
        <title></title>
        <link rel="alternate" href="https://bifeitang.github.io/2021/08/15/ExoSkeleton/MainControllerTasks/"/>
        <content type="html">&lt;h2 id=&#34;main-controller-tasks&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#main-controller-tasks&#34;&gt;#&lt;/a&gt; Main Controller Tasks&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tasks&lt;/th&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;th&gt;Priority&lt;/th&gt;
&lt;th&gt;Progress&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;IdleTask&lt;/strong&gt; (State Machine Task)&lt;/td&gt;
&lt;td&gt;Handle the state machine  transition&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;20%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;DbgPrintTask&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Write message to SCI so that logging message will be stored / displayed on UI&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;60%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;HeartBeatTask&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Ping each node receiver every 1s&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;100%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;CANReceiveTask&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Polling commands from CAN receive message box and quickly copy into circular buffer&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;100%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;ExoCmdTask&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;mark&gt;Provide following APIs&lt;/mark&gt;&amp;lt;br /&amp;gt;-  &lt;strong&gt;EnqueueCmd&lt;/strong&gt;: state machine can call this function to send a command&amp;lt;br /&amp;gt;-  &lt;strong&gt;IsCmdReceived&lt;/strong&gt; &amp;lt;br /&amp;gt;&lt;mark&gt;with following functions&lt;/mark&gt;&amp;lt;br /&amp;gt;- Send command&amp;lt;br /&amp;gt;- Resend command if no echo received before timeout &amp;lt;br /&amp;gt;- Pull message from circular buffer see if there&#39;s command echo&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;40%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;EmergencyStopTask&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Emergency Handling&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;0%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;main-controller-ui&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#main-controller-ui&#34;&gt;#&lt;/a&gt; Main Controller UI&lt;/h2&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;C:\Users\kydn8\AppData\Roaming\Typora\typora-user-images\image-20210208174357523.png&amp;quot; alt=&amp;quot;image-20210208174357523&amp;quot; style=&amp;quot;zoom:70%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Send command to main controller
&lt;ul&gt;
&lt;li&gt;More exploration (USB)&lt;/li&gt;
&lt;li&gt;Upload initial configuration to different joint&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Listening to COM port
&lt;ul&gt;
&lt;li&gt;COM5 e.g.&lt;/li&gt;
&lt;li&gt;save message to computer&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;State Machine
&lt;ul&gt;
&lt;li&gt;Initialization (Power up)
&lt;ul&gt;
&lt;li&gt;LED indication on the mode of main controller (Individual test by Lujayna )&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Next Step&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Send joint max/min range at start up&lt;/li&gt;
&lt;/ul&gt;
</content>
        <updated>2021-08-16T03:19:05.937Z</updated>
    </entry>
    <entry>
        <id>https://bifeitang.github.io/2021/08/15/ExoSkeleton/June%206th/</id>
        <title></title>
        <link rel="alternate" href="https://bifeitang.github.io/2021/08/15/ExoSkeleton/June%206th/"/>
        <content type="html">&lt;h2 id=&#34;joint-cant-communicate-with-hercules&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#joint-cant-communicate-with-hercules&#34;&gt;#&lt;/a&gt; Joint can&#39;t communicate with Hercules&lt;/h2&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CANbus&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;available&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      CANbus&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;jointCAN&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      Serial&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Receive CAN request&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      Serial&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;jointCAN&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;frame&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;buf&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The  &lt;code&gt;available()&lt;/code&gt;  function suppose to indicate receiving of CAN message, but nothing came up&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CAN bit timing may not good&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lbWJlZGNsb2dpYy5jb20vY2FuLXByb3RvY29sLXByb3RvY29sLXRvLWJyb2FkY2FzdC1tZXNzYWdlLW9uLWEtbmV0d29yay9jYW4tYml0LXRpbWluZy1hbmQtY2FsY3VsYXRpb24v&#34;&gt;https://embedclogic.com/can-protocol-protocol-to-broadcast-message-on-a-network/can-bit-timing-and-calculation/&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Original&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/** - Setup bit timing &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    *     - Setup baud rate prescaler extension&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    *     - Setup TSeg2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    *     - Setup TSeg1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    *     - Setup sample jump width&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    *     - Setup baud rate prescaler&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    canREG1&lt;span class=&#34;token operator&#34;&gt;-&gt;&lt;/span&gt;BTR &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;uint32&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;uint32&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0U&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;16U&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;uint32&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;uint32&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4U&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1U&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;12U&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;uint32&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;uint32&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3U&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;4U&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1U&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8U&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;uint32&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;uint32&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4U&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1U&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;6U&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;uint32&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;24U&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Confirmed the bit rate is 250kb/s&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210606214742664.png&#34; alt=&#34;image-20210606214742664&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Try change the heart beat frequency from 20ms to 2s&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* The 20ms value is converted to ticks using the portTICK_PERIOD_MS constant. */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;mainHEARTBEAT_FREQUENCY_MS&lt;/span&gt;         &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2000&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; portTICK_PERIOD_MS &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Confirm for Teensy (FlexCAN.cpp)&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;250000&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; baud &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    FLEXCAN0_CTRL1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;FLEXCAN_CTRL_PROPSEG&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;FLEXCAN_CTRL_RJW&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                      &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;FLEXCAN_CTRL_PSEG1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;FLEXCAN_CTRL_PSEG2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;FLEXCAN_CTRL_PRESDIV&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_0&#34; checked=&#34;true&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_0&#34;&gt; Issue with CAN transceiver? No&lt;/label&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_1&#34; checked=&#34;true&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_1&#34;&gt; Issue with Baud rate? No&lt;/label&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_2&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_2&#34;&gt; Timing issue? Teensy needs to delay a certain period of time in order to get the corresponding message.&lt;/label&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
        <updated>2021-08-16T03:19:05.921Z</updated>
    </entry>
    <entry>
        <id>https://bifeitang.github.io/2021/08/15/ExoSkeleton/HerculesCanBusCommunication_12-9-2020/</id>
        <title></title>
        <link rel="alternate" href="https://bifeitang.github.io/2021/08/15/ExoSkeleton/HerculesCanBusCommunication_12-9-2020/"/>
        <content type="html">&lt;p&gt;According to the instruction &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudGkuY29tL2xpdC9hbi9zcG5hMjM3L3NwbmEyMzcucGRmP3RzPTE2MDc0OTcwODA2NzImYW1wO3JlZl91cmw9aHR0cHMlMjUzQSUyNTJGJTI1MkZ3d3cuZ29vZ2xlLmNvbSUyNTJG&#34;&gt;https://www.ti.com/lit/an/spna237/spna237.pdf?ts=1607497080672&amp;amp;ref_url=https%3A%2F%2Fwww.google.com%2F&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201209010536090.png&#34; alt=&#34;image-20201209010536090&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201209010625937.png&#34; alt=&#34;image-20201209010625937&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201209011013043.png&#34; alt=&#34;image-20201209011013043&#34; /&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;msgBoxArbitVal&lt;/th&gt;
&lt;th&gt;Representation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Bit 31&lt;/td&gt;
&lt;td&gt;Not used&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bit 30&lt;/td&gt;
&lt;td&gt;0 - The 11-bit (&amp;quot;standard&amp;quot;) identifier is used for this message object.&amp;lt;br/&amp;gt;1 - The 29-bit (&amp;quot;extended&amp;quot;) identifier is used for this message object.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bit 29&lt;/td&gt;
&lt;td&gt;0 - Direction = Receive&amp;lt;br /&amp;gt;1 - Direction = Transmit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bit 28:0&lt;/td&gt;
&lt;td&gt;Message ID&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;E.g.&lt;/p&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;
&lt;p&gt;ID = 123, Direction = transmit, + 1 &amp;gt;&amp;gt; 29, 0 &amp;gt;&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_0&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_0&#34;&gt; Write a function to convert the ID to the msgArbitVal&lt;/label&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-C&#34;&gt;#include &amp;quot;HL_can.h&amp;quot;
#include &amp;quot;HL_system.h&amp;quot;

#include &amp;quot;HL_sys_common.h&amp;quot;

#define D_SIZE 12

uint32 getMsgBoxArbitVal(uint32 msgID, bool isTransmit, bool isExtended);

uint8 tx_data[D_SIZE] = &amp;#123;1, 1, 2, 0, 2, 0, 2, 0, &#39;E&#39;, &#39;X&#39;, &#39;O&#39;, &#39;\0&#39;&amp;#125;;


int main(void)
&amp;#123;
    canInit();
    uint32 newMsgBoxVal = getMsgBoxArbitVal(128, 1, 1);
    canUpdateID(canREG1, canMESSAGE_BOX1, newMsgBoxVal);
    canTransmit(canREG1, canMESSAGE_BOX1, tx_data);

    return 0;
&amp;#125;

uint32 getMsgBoxArbitVal(uint32 msgID, bool isTransmit, bool isExtended)
&amp;#123;
    uint32 direction = isTransmit ? (1 &amp;lt;&amp;lt; 29) : 0;
    uint32 extended = isExtended ? (1 &amp;lt;&amp;lt; 30) : 0;
    return (uint32) msgID | direction | extended;
&amp;#125;


void canMessageNotification(canBASE_t *node, uint32 messageBox)
&amp;#123;
    return;
&amp;#125;

void canErrorNotification(canBASE_t *node, uint32 notification)
&amp;#123;
    return;
&amp;#125;

void canStatusChangeNotification(canBASE_t *node, uint32 notification)
&amp;#123;
    return;
&amp;#125;

&lt;/code&gt;&lt;/pre&gt;
</content>
        <updated>2021-08-16T03:19:05.913Z</updated>
    </entry>
    <entry>
        <id>https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_May_9th_2021/</id>
        <title></title>
        <link rel="alternate" href="https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_May_9th_2021/"/>
        <content type="html">&lt;h2 id=&#34;may-9th&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#may-9th&#34;&gt;#&lt;/a&gt; May 9th&lt;/h2&gt;
&lt;h4 id=&#34;cant-compile-exojoint&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cant-compile-exojoint&#34;&gt;#&lt;/a&gt; Can&#39;t compile  &lt;code&gt;exoJoint&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Can&#39;t find  &lt;code&gt;sourceID&lt;/code&gt;  and  &lt;code&gt;targetID&lt;/code&gt; &lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210509183446878.png&#34; alt=&#34;image-20210509183446878&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;​	&lt;strong&gt;Solution&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Added to  &lt;code&gt;ExoCAN&lt;/code&gt;  class&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210509183558145.png&#34; alt=&#34;image-20210509183558145&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Can&#39;t find  &lt;code&gt;encodeMsgID&lt;/code&gt; &lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210509183756498.png&#34; alt=&#34;image-20210509183756498&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solution: comment that line out&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;cant-run-pyqt-ui-linuxwindowsmac&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cant-run-pyqt-ui-linuxwindowsmac&#34;&gt;#&lt;/a&gt; Can&#39;t run PyQt (UI, Linux/Windows/Mac)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;canGUI&lt;/code&gt;  folder does not contain any file which import  &lt;code&gt;PyQt4&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;Send command to main controller
&lt;ul&gt;
&lt;li&gt;API exposed to PyQt UI to accept any outside command&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;able-to-get-angle-recording&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#able-to-get-angle-recording&#34;&gt;#&lt;/a&gt; Able to get angle recording&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Teensy&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CDesktop%5CAngleRecord.gif&#34; alt=&#34;AngleRecord&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Try write to CAN bus with error, stops at waiting for CAN msg request&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210509234646787.png&#34; alt=&#34;image-20210509234646787&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Send angle information via CAN bus&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CDesktop%5CAngleCANRecorder.gif&#34; alt=&#34;AngleCANRecorder&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hercules basic test with value receiver&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CDesktop%5CAngleMainControllerCommunication.gif&#34; alt=&#34;AngleMainControllerCommunication&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Uplink works: teensy -&amp;gt; main controller (Task)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Teensy&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
        <updated>2021-08-16T03:19:05.902Z</updated>
    </entry>
    <entry>
        <id>https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_12-5-2020/</id>
        <title></title>
        <link rel="alternate" href="https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_12-5-2020/"/>
        <content type="html">&lt;h4 id=&#34;to-figure-out&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#to-figure-out&#34;&gt;#&lt;/a&gt; To figure out&lt;/h4&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_0&#34; checked=&#34;true&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_0&#34;&gt; Why it doesn&#39;t work previously&lt;/label&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Only Digital Read and write through pin GIOB_4 and GIOB_6 is supported&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201205162257701.png&#34; alt=&#34;image-20201205162257701&#34; /&gt;&lt;/li&gt;
&lt;li&gt;For CAN communication, it&#39;s not enough&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201205162523032.png&#34; alt=&#34;image-20201205162523032&#34; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;mark&gt;Wonder how to generate similar block for CAN bus&lt;/mark&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_1&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_1&#34;&gt; How builder/launcher/etc methods work&lt;/label&gt;&lt;/p&gt;
&lt;p&gt;USB -&amp;gt; Emulation &amp;amp; Serial port for communication with Simulink&lt;br /&gt;
Builder using builder, specify the toolchain&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Connectivity configuration&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In order to make the Simulink communicate with target, need to read/write with rtiostream.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;pre-requisite&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pre-requisite&#34;&gt;#&lt;/a&gt; Pre-Requisite&lt;/h3&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_2&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_2&#34;&gt; Cortex-R4F MCUs&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201205150154490.png&#34; alt=&#34;image-20201205150154490&#34; /&gt;&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;changes&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#changes&#34;&gt;#&lt;/a&gt; Changes&lt;/h2&gt;
&lt;h3 id=&#34;builder&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#builder&#34;&gt;#&lt;/a&gt; Builder&lt;/h3&gt;
&lt;h4 id=&#34;compare-ti_hercules_rm57lx_toolchainm-and-herculescandebugmakefile-makefile-first-part-of-the-builder&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#compare-ti_hercules_rm57lx_toolchainm-and-herculescandebugmakefile-makefile-first-part-of-the-builder&#34;&gt;#&lt;/a&gt; Compare  &lt;code&gt;TI_HERCULES_RM57Lx_toolchain.m&lt;/code&gt;  and  &lt;code&gt;HerculesCan\Debug\makefile&lt;/code&gt;  ( &lt;code&gt;makefile&lt;/code&gt; , first part of the builder)&lt;/h4&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_3&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_3&#34;&gt; Linker&lt;/label&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight makefile&#34;&gt;&lt;figcaption data-lang=&#34;makefile&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Makefile&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token symbol&#34;&gt;HerculusCan.out&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;OBJS&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;CMD_SRCS&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;GEN_CMDS&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token operator&#34;&gt;@&lt;/span&gt;echo &lt;span class=&#34;token string&#34;&gt;&#39;Building target: &#34;$@&#34;&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token operator&#34;&gt;@&lt;/span&gt;echo &lt;span class=&#34;token string&#34;&gt;&#39;Invoking: ARM Linker&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token string&#34;&gt;&#34;C:/ti/ccs1011/ccs/tools/compiler/ti-cgt-arm_20.2.1.LTS/bin/armcl&#34;&lt;/span&gt; -mv7R5 --code_state&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;32 --float_support&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;VFPv3D16 -me -g --diag_warning&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;225 --diag_wrap&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;off --display_error_number --enum_type&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;packed --abi&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;eabi -z -m&lt;span class=&#34;token string&#34;&gt;&#34;HerculusCan.map&#34;&lt;/span&gt; --heap_size&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;0x800 --stack_size&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;0x800 -i&lt;span class=&#34;token string&#34;&gt;&#34;C:/ti/ccs1011/ccs/tools/compiler/ti-cgt-arm_20.2.1.LTS/lib&#34;&lt;/span&gt; -i&lt;span class=&#34;token string&#34;&gt;&#34;C:/ti/ccs1011/ccs/tools/compiler/ti-cgt-arm_20.2.1.LTS/include&#34;&lt;/span&gt; --reread_libs --diag_wrap&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;off --display_error_number --warn_sections --xml_link_info&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;HerculusCan_linkInfo.xml&#34;&lt;/span&gt; --rom_model -o &lt;span class=&#34;token string&#34;&gt;&#34;HerculusCan.out&#34;&lt;/span&gt; &lt;span class=&#34;token variable&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;ORDERED_OBJS&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token operator&#34;&gt;@&lt;/span&gt;echo &lt;span class=&#34;token string&#34;&gt;&#39;Finished building target: &#34;$@&#34;&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token operator&#34;&gt;@&lt;/span&gt;echo &lt;span class=&#34;token string&#34;&gt;&#39; &#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight matlab&#34;&gt;&lt;figcaption data-lang=&#34;MATLAB&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;linkerOpts &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#39;-z &#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token string&#34;&gt;&#39;-m&#34;TI_HerculesPilSerial.map&#34; &#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token string&#34;&gt;&#39;-i&#34;$(TI_LIB)&#34; &#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token string&#34;&gt;&#39;-i&#34;$(TI_INCLUDE)&#34; &#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token string&#34;&gt;&#39;--reread_libs &#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token string&#34;&gt;&#39;--warn_sections &#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token string&#34;&gt;&#39;--display_error_number &#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token string&#34;&gt;&#39;--diag_wrap=off &#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token string&#34;&gt;&#39;--rom_model &#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token string&#34;&gt;&#39;--stack=0 &#39;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;	&lt;span class=&#34;token string&#34;&gt;&#39;&#34;$(TARGET_SOURCE)\halcogen\source\sys_link.cmd&#34;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_4&#34; checked=&#34;true&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_4&#34;&gt;  &lt;code&gt;-mv7R4&lt;/code&gt;  to  &lt;code&gt;-mv7R5&lt;/code&gt; &lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_5&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_5&#34;&gt;  &lt;code&gt;ProjectName.map&lt;/code&gt;  change the project name&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_6&#34; checked=&#34;true&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_6&#34;&gt;  &lt;code&gt;linker.Libraries = &amp;#123; &#39;&amp;quot;$(TI_LIB)\rtsv7R4_T_le_v3D16_eabi.lib&amp;quot;&#39; &amp;#125;;&lt;/code&gt; , confirmed the .lib exists in the  &lt;code&gt;ti-cgt-arm-20.2.1.LTS/lib&lt;/code&gt; .&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;change-targetapplicationframework-second-part-of-the-builder&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#change-targetapplicationframework-second-part-of-the-builder&#34;&gt;#&lt;/a&gt; Change  &lt;code&gt;TargetApplicationFramework&lt;/code&gt;  (second part of the builder)&lt;/h4&gt;
&lt;p&gt;Main thing is adding HalCoGen sources  &lt;code&gt;addHalCoGenSources&lt;/code&gt;  and  &lt;code&gt;addRTIOStreamSources&lt;/code&gt; . The  &lt;code&gt;TargetApplicationFramework&lt;/code&gt;  provides code to initialize the target before running the main function. It provides code like set the clock frequency, wait states, interrupts, etc. Also, set up the C runtime environment, which HalCoGen will generate.&lt;/p&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_7&#34; checked=&#34;true&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_7&#34;&gt; Replace files and folders under  &lt;code&gt;halcogen&lt;/code&gt;  with the latest configuration generated from HalCoGen, make sure the SCI2 is configured. Following is the reason for using SCI2.&lt;/label&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Before the board is shipped, the XDS100V2 port1 is configured as JTAG, and port2 is configured as SCI. The CPLD on the board is also programmed to route the JTAG signals to the MCU.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_8&#34; checked=&#34;true&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_8&#34;&gt; Update project main function to include correct header. e.g.  &lt;code&gt;gio.h&lt;/code&gt;  to  &lt;code&gt;HL_gio.h&lt;/code&gt; &lt;/label&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;launcher&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#launcher&#34;&gt;#&lt;/a&gt; Launcher&lt;/h3&gt;
&lt;p&gt;Look at  &lt;code&gt;Launcher.m&lt;/code&gt; , it uses  &lt;code&gt;loadti&lt;/code&gt;  which comes with Code Composer as a debug server scripting.&lt;/p&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_9&#34; checked=&#34;true&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_9&#34;&gt; Change  &lt;code&gt;tconf&lt;/code&gt; , make it point to new  &lt;code&gt;RM57L8xx.ccxml&lt;/code&gt; . This file can be got from Code Composer  &lt;code&gt;targetConfigs&lt;/code&gt; .&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201205232557405.png&#34; alt=&#34;image-20201205232557405&#34; /&gt;&lt;/label&gt;&lt;/p&gt;
&lt;p&gt;One can test the usability of this file by launch and try connect the the target.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;communicator&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#communicator&#34;&gt;#&lt;/a&gt; Communicator&lt;/h3&gt;
&lt;p&gt;Mathworks provide  &lt;code&gt;libmwrtiostreamserial.dll&lt;/code&gt;  on host side. On the target side, it got the  &lt;code&gt;RTIOStream&lt;/code&gt;  implemented in the sources folder.&lt;/p&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_10&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_10&#34;&gt; Platform-in-the-loop, Matlab generate binary file =&amp;gt; USB to the board.&lt;br /&gt;
Binary file, stl, open command and run the bin file&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_11&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_11&#34;&gt; Embedded version, digital write and read&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <updated>2021-08-16T03:19:05.894Z</updated>
    </entry>
    <entry>
        <id>https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_11-30-2020/</id>
        <title></title>
        <link rel="alternate" href="https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_11-30-2020/"/>
        <content type="html">&lt;h2 id=&#34;can-communication-between-teensy-and-hercules&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#can-communication-between-teensy-and-hercules&#34;&gt;#&lt;/a&gt; CAN communication between Teensy and Hercules&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb3BwZXJoaWxsdGVjaC5jb20vYmxvZy9jb250cm9sbGVyLWFyZWEtbmV0d29yay1jYW4tcHJvdG90eXBpbmctd2l0aC10ZWVuc3ktMzEzMi8=&#34;&gt;CAN Prototyping with Teensy 3.1/3.2&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In case of working with the CAN port, you will need a CAN transceiver in order to connect the board to a real CAN bus network. The best choice for adding a CAN transceiver, in terms of size and electrical compatibility, is the &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NvcHBlcmhpbGx0ZWNoLmNvbS9jYW4tYnVzLW1pbmktYnJlYWtvdXQtYm9hcmQv&#34;&gt;CAN Bus Mini Breakout Board&lt;/span&gt; we offer through this website.&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201114174628529.png&#34; alt=&#34;image-20201114174628529&#34; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201114174729789.png&#34; alt=&#34;image-20201114174729789&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Teensy:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Able to read data from Teensy Can bus&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201114182837644.png&#34; alt=&#34;image-20201114182837644&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201114183009690.png&#34; alt=&#34;image-20201114183009690&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201114184659352.png&#34; alt=&#34;image-20201114184659352&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Connect Hercules to the CAN bus&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudGkuY29tL3Rvb2wvSEFMQ09HRU4=&#34;&gt;HalCoGen&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Code Composer Studio&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201115005749530.png&#34; alt=&#34;image-20201115005749530&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure DCAN_TX, DCAN_RX&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201115233805328.png&#34; alt=&#34;image-20201115233805328&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Follow the tutorial and write code&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Figure out the DCAN1 Pin&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudGkuY29tL2xpdC9kZi9zcHJyMzk3L3NwcnIzOTcucGRmP3RzPTE2MDU0OTYyNzEwODc=&#34;&gt;https://www.ti.com/lit/df/sprr397/sprr397.pdf?ts=1605496271087&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201115234025988.png&#34; alt=&#34;image-20201115234025988&#34; /&gt;
&lt;ul&gt;
&lt;li&gt;I was thinking maybe the pin is multiplexed to here&lt;/li&gt;
&lt;li&gt;But wasn&#39;t able to find corresponding CAN1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;So looks like J10 44/45 are the pin I should use. And I have solder pin connecter to it.&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201115235233243.png&#34; alt=&#34;image-20201115235233243&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set up CAN TX&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Code Modified in  &lt;code&gt;HL_sys_man.c&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE BEGIN (0) */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;HL_can.h&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;HL_system.h&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE END */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* Include Files */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;HL_sys_common.h&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE BEGIN (1) */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE END */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/** @fn void main(void)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;*   @brief Application main function&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;*   @note This function is empty by default.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;*&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;*   This function is called after startup.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;*   The user can use this function to implement the application.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;*/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE BEGIN (2) */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;HL_can.h&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;HL_system.h&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;uint8 tx_data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;D_SIZE&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;E&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;X&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;O&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;\0&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;uint32 &lt;span class=&#34;token function&#34;&gt;checkPackets&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;uint8 &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;src_pkg&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; uint8 &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;dst_pkg&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; uint32 psize&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE END */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE BEGIN (3) */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;canInit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;canTransmit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;canREG1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; canMESSAGE_BOX1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; tx_data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE END */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE BEGIN (4) */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;uint32 &lt;span class=&#34;token function&#34;&gt;checkPackages&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;uint8 &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;src_pkg&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; uint8 &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;dst_pkg&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; uint32 psize&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    uint32 err &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    uint32 cnt &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; psize&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;src_pkg&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;dst_pkg&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            err&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; err&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;canMessageNotification&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;canBASE_t&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; uint32 messageBox&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;canErrorNotification&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;canBASE_t&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; uint32 notification&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;canStatusChangeNotification&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;canBASE_t&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; uint32 notification&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE END */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;  
- ![image-20201120224019913](C:\Users\kydn8\AppData\Roaming\Typora\typora-user-images\image-20201120224019913.png)

- ![image-20201120224129579](C:\Users\kydn8\AppData\Roaming\Typora\typora-user-images\image-20201120224129579.png)

- ![image-20201120224157852](C:\Users\kydn8\AppData\Roaming\Typora\typora-user-images\image-20201120224157852.png)

&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set up CAN RX&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201120234019661.png&#34; alt=&#34;image-20201120234019661&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201120234038976.png&#34; alt=&#34;image-20201120234038976&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Code&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;canIsRxMessageArrived&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;canREG1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; canMESSAGE_BOX2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;canGetData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;canREG1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; canMESSAGE_BOX2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; rx_data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sciSend&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sciREG1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; D_SIZE&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; rx_data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;uint32 i&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; D_SIZE&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Pos[%u] received data [%u]\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; rx_data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Both&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C&#34;&gt;int main(void)
&amp;#123;
    canInit();
    sciInit();

    while(1)
    &amp;#123;
        tx_data[0]++;
        canTransmit(canREG1, canMESSAGE_BOX1, tx_data);

        while(!canIsRxMessageArrived(canREG1, canMESSAGE_BOX2));
        canGetData(canREG1, canMESSAGE_BOX2, rx_data);

        sciSend(sciREG1, D_SIZE, rx_data);
        uint32 i;

        for(i = 0; i &amp;lt; D_SIZE; ++i)
        &amp;#123;
            printf(&amp;quot;Pos[%u] received data [%u]\n&amp;quot;, i, rx_data[i]);
        &amp;#125;
    &amp;#125;

    return 0;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201120234921668.png&#34; alt=&#34;image-20201120234921668&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set up the test coverage and add a unit test badge&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Next Steps&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Communicate&lt;/li&gt;
&lt;li&gt;State machine for joints&lt;/li&gt;
&lt;li&gt;Matlab Simulink real-times
&lt;ul&gt;
&lt;li&gt;Receive and send out the message&lt;/li&gt;
&lt;li&gt;Focus on the can receive&lt;/li&gt;
&lt;li&gt;CAN_Not_available&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201121111506761.png&#34; alt=&#34;image-20201121111506761&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;use-matlab-simulink-with-hercules-rm57x&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#use-matlab-simulink-with-hercules-rm57x&#34;&gt;#&lt;/a&gt; Use MATLAB Simulink with Hercules RM57x&lt;/h2&gt;
&lt;h3 id=&#34;set-up&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#set-up&#34;&gt;#&lt;/a&gt; Set Up&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Pre-requisite&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Cortex-R adds-on&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128150811124.png&#34; alt=&#34;image-20201128150811124&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The package toolchain may be outdated, the latest code composer version is v10, but only v5 and v6 are present.&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128151129927.png&#34; alt=&#34;image-20201128151129927&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make sure the version matches&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128151213973.png&#34; alt=&#34;image-20201128151213973&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Looks like ccsv6 has different file structure comparing with ccsv10. So installed ccsv6.&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128152234251.png&#34; alt=&#34;image-20201128152234251&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128161503273.png&#34; alt=&#34;image-20201128161503273&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This works&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128161532729.png&#34; alt=&#34;image-20201128161532729&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128161816355.png&#34; alt=&#34;image-20201128161816355&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128161825513.png&#34; alt=&#34;image-20201128161825513&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128161857315.png&#34; alt=&#34;image-20201128161857315&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128161914373.png&#34; alt=&#34;image-20201128161914373&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;run-demo-code&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#run-demo-code&#34;&gt;#&lt;/a&gt; Run Demo Code&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Remember to switch the directory&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;C:\Users\kydn8\AppData\Roaming\Typora\typora-user-images\image-20201128174747736.png&amp;quot; alt=&amp;quot;image-20201128174747736&amp;quot; style=&amp;quot;zoom:100%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Change the directory from &lt;em&gt;&lt;strong&gt;C:\Program Files\Polyspace\R2020a\bin&lt;/strong&gt;&lt;/em&gt; to your own drive&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128175033477.png&#34; alt=&#34;image-20201128175033477&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Second bug is I used  &lt;code&gt;&amp;amp;&lt;/code&gt;  in my folder name which confused the compiler.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Eventually I am able to deploy and build&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128183655265.png&#34; alt=&#34;image-20201128183655265&#34; /&gt;&lt;/p&gt;
&lt;p&gt;But there&#39;s no command window pop up as stated in the example&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;After the model launches on the hardware, a command window opens and shows that the executable is running on in the TI Hercules RM57Lx LaunchPad Development Kit. To stop the model running on the TI Hercules RM57Lx LaunchPad Development Kit, close the command window.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I suspect it&#39;s due to the warning&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;All blocks in block diagram &#39;&lt;span class=&#34;exturl&#34; data-url=&#34;bWF0bGFiOm9wZW5fc3lzdGVt&#34;&gt;arm_cortex_r_gettingstarted&lt;/span&gt;&#39; are either virtual or have been removed by block reduction optimization or they are inactive variants, therefore there is nothing to simulate. Note, for code generation, block reduction optimization removes all diagram branches terminating in sink blocks that do not participate in code generation. For example, To Workspace blocks and potentially their sources are removed when the &lt;span class=&#34;exturl&#34; data-url=&#34;bWF0bGFiOmNvbmZpZ3NldC5pbnRlcm5hbC5vcGVuKCdhcm1fY29ydGV4X3JfZ2V0dGluZ3N0YXJ0ZWQnLCdNYXRGaWxlTG9nZ2luZycpOw==&#34;&gt;MAT-file logging&lt;/span&gt; is off.&lt;/p&gt;
&lt;p&gt;Component:Simulink | Category:Block diagram warning&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Can&#39;t connect to hardware board&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201129140320119.png&#34; alt=&#34;image-20201129140320119&#34; /&gt;
&lt;ul&gt;
&lt;li&gt;Followed the question here &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubWF0aHdvcmtzLmNvbS9tYXRsYWJjZW50cmFsL2Fuc3dlcnMvNjIyMzczLWVtYmVkZGVkLWNvZGVyLWZvci1hcm0tY29ydGV4LXItcHJvY2Vzc29ycy1oZXJjdWxlcy10bXM1NzBsYzQzeA==&#34;&gt;https://www.mathworks.com/matlabcentral/answers/622373-embedded-coder-for-arm-cortex-r-processors-hercules-tms570lc43x&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;check-list&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#check-list&#34;&gt;#&lt;/a&gt; Check List&lt;/h2&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_0&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_0&#34;&gt; Be able to compile and upload code to the Teensy&lt;/label&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Clean, blink LED test&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oYW5nb3V0cy5nb29nbGUuY29tL18vZWxVaS9jaGF0LXJlZGlyZWN0P2F1dGh1c2VyPTEmYW1wO2Rlc3Q9aHR0cHMlM0ElMkYlMkZ3d3cuYXJkdWluby5jYyUyRmVuJTJGVHV0b3JpYWwlMkZCdWlsdEluRXhhbXBsZXMlMkZCbGluaw==&#34;&gt;https://www.arduino.cc/en/Tutorial/BuiltInExamples/Blink&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;#define LED 13&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_1&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_1&#34;&gt; Luu will send the CAN send/receive code&lt;/label&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_2&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_2&#34;&gt; CAN Analyzer, microchip&lt;/label&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_3&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_3&#34;&gt; After the communication between Tessny-&amp;gt; Hercules Data&lt;/label&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Logging&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Timestamp, sampling rate, every signgle frame&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Will log the data into as Restful API call, Json format&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;200 Hz, every frame, log into the Json file 0.005&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
        <updated>2021-08-16T03:19:05.888Z</updated>
    </entry>
    <entry>
        <id>https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_11-15-2020/</id>
        <title></title>
        <link rel="alternate" href="https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_11-15-2020/"/>
        <content type="html">&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_0&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_0&#34;&gt; Ask about UH software&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;can-communication-between-teensy-and-hercules&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#can-communication-between-teensy-and-hercules&#34;&gt;#&lt;/a&gt; CAN communication between Teensy and Hercules&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb3BwZXJoaWxsdGVjaC5jb20vYmxvZy9jb250cm9sbGVyLWFyZWEtbmV0d29yay1jYW4tcHJvdG90eXBpbmctd2l0aC10ZWVuc3ktMzEzMi8=&#34;&gt;CAN Prototyping with Teensy 3.1/3.2&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In case of working with the CAN port, you will need a CAN transceiver in order to connect the board to a real CAN bus network. The best choice for adding a CAN transceiver, in terms of size and electrical compatibility, is the &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2NvcHBlcmhpbGx0ZWNoLmNvbS9jYW4tYnVzLW1pbmktYnJlYWtvdXQtYm9hcmQv&#34;&gt;CAN Bus Mini Breakout Board&lt;/span&gt; we offer through this website.&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201114174628529.png&#34; alt=&#34;image-20201114174628529&#34; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201114174729789.png&#34; alt=&#34;image-20201114174729789&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Teensy:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Able to read data from Teensy Can bus&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201114182837644.png&#34; alt=&#34;image-20201114182837644&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201114183009690.png&#34; alt=&#34;image-20201114183009690&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201114184659352.png&#34; alt=&#34;image-20201114184659352&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Connect Hercules to the CAN bus&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudGkuY29tL3Rvb2wvSEFMQ09HRU4=&#34;&gt;HalCoGen&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Code Composer Studio&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201115005749530.png&#34; alt=&#34;image-20201115005749530&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure DCAN_TX, DCAN_RX&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201115233805328.png&#34; alt=&#34;image-20201115233805328&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Follow the tutorial and write code&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Figure out the DCAN1 Pin&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudGkuY29tL2xpdC9kZi9zcHJyMzk3L3NwcnIzOTcucGRmP3RzPTE2MDU0OTYyNzEwODc=&#34;&gt;https://www.ti.com/lit/df/sprr397/sprr397.pdf?ts=1605496271087&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201115234025988.png&#34; alt=&#34;image-20201115234025988&#34; /&gt;
&lt;ul&gt;
&lt;li&gt;I was thinking maybe the pin is multiplexed to here&lt;/li&gt;
&lt;li&gt;But wasn&#39;t able to find corresponding CAN1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;So looks like J10 44/45 are the pin I should use. And I have solder pin connecter to it.&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201115235233243.png&#34; alt=&#34;image-20201115235233243&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set up CAN TX&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Code Modified in  &lt;code&gt;HL_sys_man.c&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE BEGIN (0) */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;HL_can.h&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;HL_system.h&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE END */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* Include Files */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;HL_sys_common.h&#34;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE BEGIN (1) */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE END */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/** @fn void main(void)&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;*   @brief Application main function&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;*   @note This function is empty by default.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;*&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;*   This function is called after startup.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;*   The user can use this function to implement the application.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;*/&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE BEGIN (2) */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;D_SIZE&lt;/span&gt; &lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;uint8 tx_data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;D_SIZE&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;E&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;X&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;O&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;\0&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;uint32 &lt;span class=&#34;token function&#34;&gt;checkPackets&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;uint8 &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;src_pkg&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; uint8 &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;dst_pkg&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; uint32 psize&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE END */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE BEGIN (3) */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;canInit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;canTransmit&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;canREG1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; canMESSAGE_BOX1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; tx_data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE END */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE BEGIN (4) */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;uint32 &lt;span class=&#34;token function&#34;&gt;checkPackages&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;uint8 &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;src_pkg&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; uint8 &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;dst_pkg&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; uint32 psize&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    uint32 err &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    uint32 cnt &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; psize&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;cnt&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;src_pkg&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;dst_pkg&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            err&lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; err&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;canMessageNotification&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;canBASE_t&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; uint32 messageBox&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;canErrorNotification&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;canBASE_t&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; uint32 notification&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;canStatusChangeNotification&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token class-name&#34;&gt;canBASE_t&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;node&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; uint32 notification&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* USER CODE END */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201120224019913.png&#34; alt=&#34;image-20201120224019913&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201120224129579.png&#34; alt=&#34;image-20201120224129579&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201120224157852.png&#34; alt=&#34;image-20201120224157852&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set up CAN RX&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201120234019661.png&#34; alt=&#34;image-20201120234019661&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201120234038976.png&#34; alt=&#34;image-20201120234038976&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Code&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;canIsRxMessageArrived&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;canREG1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; canMESSAGE_BOX2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;canGetData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;canREG1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; canMESSAGE_BOX2&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; rx_data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sciSend&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sciREG1&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; D_SIZE&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; rx_data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;uint32 i&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt; D_SIZE&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token function&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Pos[%u] received data [%u]\n&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; rx_data&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Both&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-C&#34;&gt;int main(void)
&amp;#123;
    canInit();
    sciInit();

    while(1)
    &amp;#123;
        tx_data[0]++;
        canTransmit(canREG1, canMESSAGE_BOX1, tx_data);

        while(!canIsRxMessageArrived(canREG1, canMESSAGE_BOX2));
        canGetData(canREG1, canMESSAGE_BOX2, rx_data);

        sciSend(sciREG1, D_SIZE, rx_data);
        uint32 i;

        for(i = 0; i &amp;lt; D_SIZE; ++i)
        &amp;#123;
            printf(&amp;quot;Pos[%u] received data [%u]\n&amp;quot;, i, rx_data[i]);
        &amp;#125;
    &amp;#125;

    return 0;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201120234921668.png&#34; alt=&#34;image-20201120234921668&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set up the test coverage and add a unit test badge&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Next Steps&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Communicate&lt;/li&gt;
&lt;li&gt;State machine for joints&lt;/li&gt;
&lt;li&gt;Matlab Simulink real-times
&lt;ul&gt;
&lt;li&gt;Receive and send out the message&lt;/li&gt;
&lt;li&gt;Focus on the can receive&lt;/li&gt;
&lt;li&gt;CAN_Not_available&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201121111506761.png&#34; alt=&#34;image-20201121111506761&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;use-matlab-simulink-with-hercules-rm57x&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#use-matlab-simulink-with-hercules-rm57x&#34;&gt;#&lt;/a&gt; Use MATLAB Simulink with Hercules RM57x&lt;/h2&gt;
&lt;h3 id=&#34;set-up&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#set-up&#34;&gt;#&lt;/a&gt; Set Up&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Pre-requisite&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MATLAB Embedded Cortex-R&lt;/li&gt;
&lt;li&gt;Code composer with specific version of code generation tools compiler installed&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Cortex-R adds-on&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128150811124.png&#34; alt=&#34;image-20201128150811124&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The package toolchain may be outdated, the latest code composer version is v10, but only v5 and v6 are present.&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128151129927.png&#34; alt=&#34;image-20201128151129927&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make sure the version matches&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128151213973.png&#34; alt=&#34;image-20201128151213973&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Looks like ccsv6 has different file structure comparing with ccsv10. So installed ccsv6.&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128152234251.png&#34; alt=&#34;image-20201128152234251&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128161503273.png&#34; alt=&#34;image-20201128161503273&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This works&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128161532729.png&#34; alt=&#34;image-20201128161532729&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128161816355.png&#34; alt=&#34;image-20201128161816355&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128161825513.png&#34; alt=&#34;image-20201128161825513&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128161857315.png&#34; alt=&#34;image-20201128161857315&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128161914373.png&#34; alt=&#34;image-20201128161914373&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;run-demo-code&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#run-demo-code&#34;&gt;#&lt;/a&gt; Run Demo Code&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Remember to switch the directory&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;C:\Users\kydn8\AppData\Roaming\Typora\typora-user-images\image-20201128174747736.png&amp;quot; alt=&amp;quot;image-20201128174747736&amp;quot; style=&amp;quot;zoom:100%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Change the directory from &lt;em&gt;&lt;strong&gt;C:\Program Files\Polyspace\R2020a\bin&lt;/strong&gt;&lt;/em&gt; to your own drive&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128175033477.png&#34; alt=&#34;image-20201128175033477&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Second bug is I used  &lt;code&gt;&amp;amp;&lt;/code&gt;  in my folder name which confused the compiler.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Eventually I am able to deploy and build&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128183655265.png&#34; alt=&#34;image-20201128183655265&#34; /&gt;&lt;/p&gt;
&lt;p&gt;But there&#39;s no command window pop up as stated in the example&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;After the model launches on the hardware, a command window opens and shows that the executable is running on in the TI Hercules RM57Lx LaunchPad Development Kit. To stop the model running on the TI Hercules RM57Lx LaunchPad Development Kit, close the command window.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I suspect it&#39;s due to the warning&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;All blocks in block diagram &#39;&lt;span class=&#34;exturl&#34; data-url=&#34;bWF0bGFiOm9wZW5fc3lzdGVt&#34;&gt;arm_cortex_r_gettingstarted&lt;/span&gt;&#39; are either virtual or have been removed by block reduction optimization or they are inactive variants, therefore there is nothing to simulate. Note, for code generation, block reduction optimization removes all diagram branches terminating in sink blocks that do not participate in code generation. For example, To Workspace blocks and potentially their sources are removed when the &lt;span class=&#34;exturl&#34; data-url=&#34;bWF0bGFiOmNvbmZpZ3NldC5pbnRlcm5hbC5vcGVuKCdhcm1fY29ydGV4X3JfZ2V0dGluZ3N0YXJ0ZWQnLCdNYXRGaWxlTG9nZ2luZycpOw==&#34;&gt;MAT-file logging&lt;/span&gt; is off.&lt;/p&gt;
&lt;p&gt;Component:Simulink | Category:Block diagram warning&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Can&#39;t connect to hardware board&lt;/strong&gt;&lt;br /&gt;
&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201129140320119.png&#34; alt=&#34;image-20201129140320119&#34; /&gt;
&lt;ul&gt;
&lt;li&gt;Followed the question here &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubWF0aHdvcmtzLmNvbS9tYXRsYWJjZW50cmFsL2Fuc3dlcnMvNjIyMzczLWVtYmVkZGVkLWNvZGVyLWZvci1hcm0tY29ydGV4LXItcHJvY2Vzc29ycy1oZXJjdWxlcy10bXM1NzBsYzQzeA==&#34;&gt;https://www.mathworks.com/matlabcentral/answers/622373-embedded-coder-for-arm-cortex-r-processors-hercules-tms570lc43x&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;check-list&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#check-list&#34;&gt;#&lt;/a&gt; Check List&lt;/h2&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_1&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_1&#34;&gt; Be able to compile and upload code to the Teensy&lt;/label&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Clean, blink LED test&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oYW5nb3V0cy5nb29nbGUuY29tL18vZWxVaS9jaGF0LXJlZGlyZWN0P2F1dGh1c2VyPTEmYW1wO2Rlc3Q9aHR0cHMlM0ElMkYlMkZ3d3cuYXJkdWluby5jYyUyRmVuJTJGVHV0b3JpYWwlMkZCdWlsdEluRXhhbXBsZXMlMkZCbGluaw==&#34;&gt;https://www.arduino.cc/en/Tutorial/BuiltInExamples/Blink&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;#define LED 13&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_2&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_2&#34;&gt; Luu will send the CAN send/receive code&lt;/label&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_3&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_3&#34;&gt; CAN Analyzer, microchip&lt;/label&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_4&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_4&#34;&gt; After the communication between Tessny-&amp;gt; Hercules Data&lt;/label&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Logging&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Timestamp, sampling rate, every signgle frame&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Will log the data into as Restful API call, Json format&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;200 Hz, every frame, log into the Json file 0.005&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_5&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_5&#34;&gt; nikunj bhagat&lt;/label&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
        <updated>2021-08-16T03:19:05.869Z</updated>
    </entry>
    <entry>
        <id>https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_7-23-2021/</id>
        <title></title>
        <link rel="alternate" href="https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_7-23-2021/"/>
        <content type="html">&lt;h2 id=&#34;heartbeat-from-hercules-to-teensy&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#heartbeat-from-hercules-to-teensy&#34;&gt;#&lt;/a&gt; Heartbeat from Hercules to Teensy&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Heartbeat Task design&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hercules -&amp;gt; Teensy: send heartbeat to all teensy nodes every 200ms&lt;/li&gt;
&lt;li&gt;Teensy corresponding node reply with it&#39;s current angle&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Major code from Hercules&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;HeartBeatTask&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;pvParameters&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    TickType_t xNextWakeTime&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    xNextWakeTime &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;xTaskGetTickCount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token function&#34;&gt;vTaskDelayUntil&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;xNextWakeTime&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; mainHEARTBEAT_FREQUENCY_MS &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;int&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;i &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; i &lt;span class=&#34;token operator&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;++&lt;/span&gt;i&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token class-name&#34;&gt;uint32_t&lt;/span&gt; canID &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;char&lt;/span&gt; data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token function&#34;&gt;HerculesCANWrite&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;canID&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token function&#34;&gt;DbgPrint&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Send HeartBeat Message from CAN bus&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Major code from Teensy&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;if (CANbus.available()) &amp;#123;
        CANbus.read(rxCANmsg);
        if (rxCANmsg.id == 2 &amp;amp;&amp;amp; rxCANmsg.buf[0] == &#39;1&#39;)
        &amp;#123;
          Serial.println((String) &amp;quot;Receive Hear Beat CAN message&amp;quot;);
          Serial.println((String) &amp;quot;Reply with Joint Angle&amp;quot; + jointCAN.frame.buf[0] + &amp;quot;-&amp;quot; + jointCAN.frame.buf[1]);
          CANbus.write(jointCAN.frame);
        &amp;#125;
    &amp;#125;

&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Screenshot&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210723010627617.png&#34; alt=&#34;image-20210723010627617&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Please find gif from attachment&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CDesktop%5CHerculesHearBeatResponseSingleNode.gif&#34; alt=&#34;HerculesHearBeatResponseSingleNode&#34; /&gt;&lt;/p&gt;
</content>
        <updated>2021-08-16T03:19:05.860Z</updated>
    </entry>
    <entry>
        <id>https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_03-13-2021/</id>
        <title></title>
        <link rel="alternate" href="https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_03-13-2021/"/>
        <content type="html">&lt;h2 id=&#34;hercules_migrate_update_03-13-2021&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hercules_migrate_update_03-13-2021&#34;&gt;#&lt;/a&gt; Hercules_Migrate_Update_03-13-2021&lt;/h2&gt;
&lt;h4 id=&#34;task-creation-in-another-task&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#task-creation-in-another-task&#34;&gt;#&lt;/a&gt; Task creation in another task&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;it is perfectly ok to create tasks from inside other tasks.&lt;/li&gt;
&lt;li&gt;Any call to  &lt;code&gt;xTaskCreate()&lt;/code&gt;  will allocate a TCB structure and stack for that task. No matter where the task gets created (from  a  function or another task), they will be in the separated memory. Say  &lt;code&gt;TaskX&lt;/code&gt;  is created, without deleting  &lt;code&gt;TaskX&lt;/code&gt; ,  &lt;code&gt;TaskY&lt;/code&gt;  is also created. Then two tasks won&#39;t use the same memory because both calls to  &lt;code&gt;xTaskCreate()&lt;/code&gt;  will allocate separated RAM.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;passing-parameters-to-task&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#passing-parameters-to-task&#34;&gt;#&lt;/a&gt; Passing Parameters to Task&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Ref
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuaGFja3N0ZXIuaW8vTmlrZXQvdGFza3MtcGFyYW1ldGVydG90YXNrcy1mcmVlcnRvcy10dXRvcmlhbC01LWI4YTdiNw==&#34;&gt;https://www.hackster.io/Niket/tasks-parametertotasks-freertos-tutorial-5-b8a7b7&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;taskdelayuntil&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#taskdelayuntil&#34;&gt;#&lt;/a&gt; TaskDelayUntil&lt;/h4&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* The rate at which data is sent to the queue.  The 200ms value is converted&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;to ticks using the portTICK_PERIOD_MS constant. */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token macro property&#34;&gt;&lt;span class=&#34;token directive-hash&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;token directive keyword&#34;&gt;define&lt;/span&gt; &lt;span class=&#34;token macro-name&#34;&gt;mainQUEUE_SEND_FREQUENCY_MS&lt;/span&gt;			&lt;span class=&#34;token expression&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; portTICK_PERIOD_MS &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;xNextWakeTime &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;xTaskGetTickCount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;/* Place this task in the blocked state until it is time to run again. The block time is specified in ticks, the constant used converts ticks to ms.  While in the Blocked state this task will not consume any CPU time. */&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;vTaskDelayUntil&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;amp;&lt;/span&gt;xNextWakeTime&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; mainQUEUE_SEND_FREQUENCY_MS &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;freertos-task-name&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#freertos-task-name&#34;&gt;#&lt;/a&gt; FreeRTOS Task Name&lt;/h4&gt;
&lt;p&gt;1&lt;/p&gt;
&lt;p&gt;I&#39;m a newbie of FreeRTOS. But I don&#39;t think it&#39;s well documented. As in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZnJlZXJ0b3Mub3JnL2EwMDEyNS5odG1s&#34;&gt;xTaskCreate()&lt;/span&gt; :&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;pcName&lt;/code&gt;  A descriptive name for the task. This is mainly used to facilitate debugging, but can also be used to obtain a task handle. The maximum length of a task’s name is set using the  &lt;code&gt;configMAX_TASK_NAME_LEN&lt;/code&gt;  parameter in  &lt;code&gt;FreeRTOSConfig.h&lt;/code&gt; .&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Is a task must be associated with a name?
&lt;ul&gt;
&lt;li&gt;No it does not need a name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What happened if  &lt;code&gt;pcName&lt;/code&gt;  is NULL?
&lt;ul&gt;
&lt;li&gt;If  &lt;code&gt;pcName&lt;/code&gt;  is  &lt;code&gt;NULL&lt;/code&gt;  it simply does not have a name. Nothing happens.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What happened if I created multiple tasks with the same name?
&lt;ul&gt;
&lt;li&gt;You will get several tasks with the same name so you cannot identify them by name. The behavior of  &lt;code&gt;xTaskGetHandle&lt;/code&gt;  is then undefined (as per the documentation).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Should I maintain the mapping between task&#39;s handle and name? Or FreeRTOS maintains this relation?
&lt;ul&gt;
&lt;li&gt;FreeRTOS handles this.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To Do&lt;/p&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_0&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_0&#34;&gt; Make debug message take parameter, use vector convention&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_1&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_1&#34;&gt; Write a circular buffer to record the mapping information between hashcode and command sending state&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_2&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_2&#34;&gt; Explore other simpler data structure since our commands to won&#39;t be too much&lt;/label&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_3&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_3&#34;&gt; Command we send are usually in sequence, FIFO&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_4&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_4&#34;&gt; Read emergency, we can start a highest priority task, to handle all the emergency&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_5&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_5&#34;&gt; Put all the priority define into one dedicated file&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;[ ]&lt;/li&gt;
&lt;/ul&gt;
</content>
        <updated>2021-08-16T03:19:05.847Z</updated>
    </entry>
    <entry>
        <id>https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_02-28-2020/</id>
        <title></title>
        <link rel="alternate" href="https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_02-28-2020/"/>
        <content type="html">&lt;h2 id=&#34;review-state-machine-event-driven-programming&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#review-state-machine-event-driven-programming&#34;&gt;#&lt;/a&gt; Review State Machine Event Driven Programming&lt;/h2&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuc3RhdGUtbWFjaGluZS5jb20vZXZlbnQtZHJpdmVuLXByb2dyYW1taW5nLw==&#34;&gt;https://www.state-machine.com/event-driven-programming/&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_0&#34; checked=&#34;true&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_0&#34;&gt; Object oriented flavor with  &lt;code&gt;wnd&lt;/code&gt;  object&lt;/label&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight c&#34;&gt;&lt;figcaption data-lang=&#34;c&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;wnd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cbSize &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;sizeof&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;wnd&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_1&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_1&#34;&gt;  &lt;code&gt;EventLoop&lt;/code&gt; , with message loop and message pump&lt;/label&gt;&lt;/p&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_2&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_2&#34;&gt; 1. use a special  &lt;code&gt;object&lt;/code&gt;  to record all the events potentially interesting to an application, this object is only used for communication and can be conveniently stored in the event queue, and later retrieved for processing. Can provide  &lt;code&gt;asynchronous&lt;/code&gt;  processing&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_3&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_3&#34;&gt; 2.  &lt;code&gt;DispatchMessage&lt;/code&gt;  must complete and return to the event-loop before the loop goes to the next event. (Event processing proceeds in Run-to-Completion (RTC)). Realize  &lt;code&gt;inversion of control&lt;/code&gt;  for the event driven.&lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_4&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_4&#34;&gt;  &lt;code&gt;GetMessage&lt;/code&gt;  unblock, take the message from the queue, place it to the object&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;
&lt;p&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_5&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_5&#34;&gt;  &lt;code&gt;Event-driven&lt;/code&gt;  programming should be separated from  &lt;code&gt;sequential&lt;/code&gt;  programming&lt;/label&gt;&lt;/p&gt;
&lt;ul class=&#34;task-list&#34;&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_6&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_6&#34;&gt; E.g. instead of using  &lt;code&gt;sleep&lt;/code&gt; , use  &lt;code&gt;SetTimer()&lt;/code&gt; &lt;/label&gt;&lt;/li&gt;
&lt;li class=&#34;task-list-item&#34;&gt;&lt;input type=&#34;checkbox&#34; id=&#34;cbx_7&#34; disabled=&#34;true&#34; /&gt;&lt;label for=&#34;cbx_7&#34;&gt; This is a perfect way to delegate a command to sleep and wake up later&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
        <updated>2021-08-16T03:19:05.817Z</updated>
    </entry>
    <entry>
        <id>https://bifeitang.github.io/2021/08/15/ExoSkeleton/Untitled/</id>
        <title></title>
        <link rel="alternate" href="https://bifeitang.github.io/2021/08/15/ExoSkeleton/Untitled/"/>
        <content type="html"></content>
        <updated>2021-08-16T03:19:05.688Z</updated>
    </entry>
    <entry>
        <id>https://bifeitang.github.io/2021/08/15/hello-world/</id>
        <title>Hello World</title>
        <link rel="alternate" href="https://bifeitang.github.io/2021/08/15/hello-world/"/>
        <content type="html">&lt;p&gt;Welcome to &lt;a href=&#34;https://hexo.io/&#34;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&#34;https://hexo.io/docs/&#34;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&#34;https://hexo.io/docs/troubleshooting.html&#34;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&#34;https://github.com/hexojs/hexo/issues&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;Quick-Start&#34;&gt;&lt;a href=&#34;#Quick-Start&#34; class=&#34;headerlink&#34; title=&#34;Quick Start&#34;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&#34;Create-a-new-post&#34;&gt;&lt;a href=&#34;#Create-a-new-post&#34; class=&#34;headerlink&#34; title=&#34;Create a new post&#34;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo new &lt;span class=&#34;string&#34;&gt;&amp;quot;My New Post&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/writing.html&#34;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;Run-server&#34;&gt;&lt;a href=&#34;#Run-server&#34; class=&#34;headerlink&#34; title=&#34;Run server&#34;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/server.html&#34;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;Generate-static-files&#34;&gt;&lt;a href=&#34;#Generate-static-files&#34; class=&#34;headerlink&#34; title=&#34;Generate static files&#34;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/generating.html&#34;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;Deploy-to-remote-sites&#34;&gt;&lt;a href=&#34;#Deploy-to-remote-sites&#34; class=&#34;headerlink&#34; title=&#34;Deploy to remote sites&#34;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/deployment.html&#34;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
        <updated>2021-08-15T15:34:39.485Z</updated>
    </entry>
    <entry>
        <id>https://bifeitang.github.io/2021/08/14/Notes-list/</id>
        <title>Notes list</title>
        <link rel="alternate" href="https://bifeitang.github.io/2021/08/14/Notes-list/"/>
        <content type="html"></content>
        <updated>2021-08-15T00:36:17.000Z</updated>
    </entry>
    <entry>
        <id>https://bifeitang.github.io/2021/08/01/Don-t-need-to-be-amazing-to-start/</id>
        <title>Don&#39;t need to be amazing to start</title>
        <link rel="alternate" href="https://bifeitang.github.io/2021/08/01/Don-t-need-to-be-amazing-to-start/"/>
        <content type="html">&lt;p&gt;It&#39;s 2 am now, but I am staying up late again. This time, it&#39;s about a book I am reading before going to bed.&lt;/p&gt;
&lt;p&gt;Quote &amp;quot;Don&#39;t be afraid of the edge, or not enough knowledge, put your own not enough, naive true embodiment, it will be lovely, don&#39;t pretend. The same goes for the application topic. It must be peculiar. If I can see that you have genuine feelings about the topic, I will be more able to understand why you want to do this topic, will have confidence in you, and trust you to do it.&amp;quot;&lt;/p&gt;
&lt;p&gt;I have been long anxious about not being fully prepared for my Ph.D. application. Even I started one year ago.&lt;/p&gt;
&lt;p&gt;I never seriously consider having a Ph.D. until I start working. It teaches me two working styles. A group of my colleagues are passionate and keep coming up with new methods, following the state of art technologies by reading many papers and reaching out to the most knowledgeable people in the field. They even actively push the management to allow them more resources for innovation. Another group focuses on getting the job done elegantly and efficiently with clear-defined requirements and starting their chill time in style.&lt;/p&gt;
&lt;p&gt;Top performers in each group shine in their way.  However, I am deeply attracted to the first type, which emphasizes more on the work itself. In other words, I hope I love the job itself more than the meaning of the job because the purpose of the job changes over time, but if the job itself keeps revealing the fancy of the world, it will be a whole different story.&lt;/p&gt;
&lt;p&gt;However, which job is the one I love? I think it&#39;s a tricky question for most people, including myself. I enjoy coding, but coding is just a tool. It&#39;s what I build with this tool that genuinely matters. So I started trial and error to find my preferred domain. I started with blockchain and did an internship building distributed apps. But it didn&#39;t take me long to realize that what interested me was the utopian vision that the blockchain was building. I then tried security by having classes and participating in CTF competitions. But the reality tells me that I lack talent. I am confident to be experienced and proficient in this field, but it&#39;s hard to be at the top. And I may love hacking merely because it sounds cool. Then I had an opportunity to work with the operating system. But I turned it down since it&#39;s something I am good at but not passionate about. The ongoing trial and error can be frustrating and exhausting, but I have also learned the importance of balancing ideals and reality more profoundly.&lt;/p&gt;
&lt;p&gt;Hard work pays off for a willing heart. I&#39;m still glad I clicked on Coursera&#39;s Computational Neural Science class one boring night. That night I had just been intrigued by Elon Musk&#39;s pie-in-the-sky talk on Joe Rogan&#39;s podcast about a new &amp;quot;Neuralink&amp;quot; product to announce, which claims to make everyone a superhuman. Being skeptical, I started to search around to understand what on earth Neuralink is doing. But the more I learn, the more I am amazed at the wonders of this field. How is it possible that it took human beings thousands of years to learn electronic circuits, but these principles have surprisingly long been part of our bodies supporting our daily physiological activities? Nature already equates each nerve impulse with resistance, capacitance, and inductance. At that moment, I felt loved since each of us is so exquisitely constructed.&lt;/p&gt;
&lt;p&gt;Come to think of it, brain-computer interface, cyborg, cyberpunk has always been my favorite topic (check my list). Is it time for us humans to mirror the imagination of science fiction into reality? I thought it was still far from me in 2019 when I first heard Elon Musk emphasized the urgency of increasing the input/output bandwidth for human-computer communication by using BCI.&lt;/p&gt;
&lt;p&gt;To verify if I am genuinely interested in this area and if my skill set could support my interest, I started finding research opportunities and connecting with different people in the field. Luckily, I got a volunteer position at the University of Houston to work on exoskeleton BCI. In the meantime, I started to take online courses, read books, and visit forums. Moreover, I would find related papers for exciting topics, contact the writer, and get my hands dirty to reproduce their results.&lt;/p&gt;
&lt;p&gt;Through a whole year of accumulation, I am keen to use this blog to share the fun and excitement that BCI has brought me. Although it may take more than half a century to get sci-fi imaginations into reality, I find the challenges themselves fascinating. Understanding how exactly our brain works, what intelligence is, how we can communicate with the mind. It sounds like something I can work on for the rest of my life.&lt;/p&gt;
</content>
        <updated>2021-08-02T02:26:04.000Z</updated>
    </entry>
    <entry>
        <id>https://bifeitang.github.io/2020/10/25/first-post/</id>
        <title>Eureka</title>
        <link rel="alternate" href="https://bifeitang.github.io/2020/10/25/first-post/"/>
        <content type="html">&lt;p&gt;Kinds of hard to believe I start posting again after my blog has been dormented for so long.&lt;/p&gt;
&lt;p&gt;The motivation comes from figuring out what really interest me – brain study.&lt;/p&gt;
</content>
        <updated>2020-10-25T07:37:30.000Z</updated>
    </entry>
    <entry>
        <id>https://bifeitang.github.io/2020/10/25/ComputationalNeuroscience/Week1/</id>
        <title>What do Neurons Encode? Neural Encoding Models (Adrienne Fairhall)</title>
        <link rel="alternate" href="https://bifeitang.github.io/2020/10/25/ComputationalNeuroscience/Week1/"/>
        <content type="html">&lt;p&gt;Week2&lt;/p&gt;
</content>
        <category term="Computational Neuroscience" scheme="https://bifeitang.github.io/categories/ComputationalNeuroscience/" />
        <category term="ComputationalNeuroscience" scheme="https://bifeitang.github.io/tags/ComputationalNeuroscience/" />
        <updated>2020-10-25T07:37:30.000Z</updated>
    </entry>
    <entry>
        <id>https://bifeitang.github.io/2020/10/25/ComputationalNeuroscience/Week2/</id>
        <title>Introduction &amp; Basic Neurobiology (Rajesh Rao)</title>
        <link rel="alternate" href="https://bifeitang.github.io/2020/10/25/ComputationalNeuroscience/Week2/"/>
        <content type="html">&lt;p&gt;Week1&lt;br /&gt;
What do Neurons Encode? Neural Encoding Models (Adrienne Fairhall)&lt;/p&gt;
</content>
        <category term="Computational Neuroscience" scheme="https://bifeitang.github.io/categories/ComputationalNeuroscience/" />
        <category term="ComputationalNeuroscience" scheme="https://bifeitang.github.io/tags/ComputationalNeuroscience/" />
        <updated>2020-10-25T07:37:30.000Z</updated>
    </entry>
    <entry>
        <id>https://bifeitang.github.io/2020/10/25/ExoSkeleton/Environment%20Setup/</id>
        <title>Environment Setup</title>
        <link rel="alternate" href="https://bifeitang.github.io/2020/10/25/ExoSkeleton/Environment%20Setup/"/>
        <content type="html">&lt;h2 id=&#34;environment-setup&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#environment-setup&#34;&gt;#&lt;/a&gt; Environment Setup&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Pre-requisit&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download  &lt;code&gt;HalCoGen&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudGkuY29tL3Rvb2wvSEFMQ09HRU4=&#34;&gt;https://www.ti.com/tool/HALCOGEN&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Download and install  &lt;code&gt;Code Composer Studio&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudGkuY29tL3Rvb2wvQ0NTVFVESU8=&#34;&gt;https://www.ti.com/tool/CCSTUDIO&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure the HalCoGen&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210326171445660.png&#34; alt=&#34;image-20210326171445660&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210326171925351.png&#34; alt=&#34;image-20210326171925351&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configuration&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210326172044134.png&#34; alt=&#34;image-20210326172044134&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Verify&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210326172543938.png&#34; alt=&#34;image-20210326172543938&#34; /&gt;&lt;/p&gt;
</content>
        <category term="Exo Skeleton" scheme="https://bifeitang.github.io/categories/ExoSkeleton/" />
        <category term="Exo Skeleton" scheme="https://bifeitang.github.io/tags/Exo-Skeleton/" />
        <updated>2020-10-25T07:37:30.000Z</updated>
    </entry>
</feed>
