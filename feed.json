{
    "version": "https://jsonfeed.org/version/1",
    "title": "Yang's Blog",
    "subtitle": "",
    "icon": "https://bifeitang.github.io/images/favicon.ico",
    "description": "",
    "home_page_url": "https://bifeitang.github.io",
    "items": [
        {
            "id": "https://bifeitang.github.io/2021/09/09/EEG/Ideas%20on%20robots/",
            "url": "https://bifeitang.github.io/2021/09/09/EEG/Ideas%20on%20robots/",
            "title": "",
            "date_published": "2021-09-09T06:24:54.884Z",
            "content_html": "<p>Brain controlled robot learning</p>\n<p>本来在跟朋友聊家政的事情。中国未来人口老龄化严重，需要大量的生产力去照顾这些人，所以需要一定数量的家政机器人。但是现在的机器人基本上只能做非常 basic 的事情，最好的 Boston Dynamics 的狗造价很贵，而且职能也许没那么明确。如何能把人类的想法移植给机器人呢？有没有什么 generic BCI interface？</p>\n<p>能考虑到的有 motion imaginary BCI，我们大脑里面想如何让这个机器人动起来，比如先给机器人 3D 扫描一下，然后人在一边思考这个机器人动起来的样子，然后让机器人真的按照这种方式动起来，就像 sci fi 里面的脑控机器人一样。这样机器人也许不需要那么多的训练</p>\n<p>当然，要考虑到我们人脑大概率会省略很多的中间过程</p>\n<p>好处当然是可以实现这些机器人的个性化需求，不需要大量的 training</p>\n<p>如果人和机器人用同样的神经网络，也就是 cerebral cortex 的话，说不定是可以直接 translate 和移植的，就像我示范一遍，另外一个人就可以有样学样</p>\n<p>但是机器人领域里面很多人在研究了，包括用实际的 data 去训练</p>\n<p>How coarse it will become in order to get it work</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbmdpbmVlcmluZy5jbXUuZWR1L25ld3MtZXZlbnRzL25ld3MvMjAxOS8wNi8yMC1oZS1zY2ktcm9ib3RpY3MuaHRtbA==\">https://engineering.cmu.edu/news-events/news/2019/06/20-he-sci-robotics.html</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3NhaWwubWl0LmVkdS9yZXNlYXJjaC9icmFpbi1jb250cm9sbGVkLXJvYm90cw==\">https://www.csail.mit.edu/research/brain-controlled-robots</span></p>\n<p>Controlling of virtual avatar to actual robot, is it possible? Then map it to actual robot</p>\n<p>Then robot learn from it and repeat or adjust their behavior accordingly to a point they don't need assist from human anymore</p>\n<p>Make it a standard</p>\n<p>Difficulties, robots had their own way of study, can they understand human intention?</p>\n<p>Next steps</p>\n<ul>\n<li>Why it's so hard to get a clear EEG signal for controlling of robotic arm? How to improve it?</li>\n<li>Is it possible to control the moving of virtual avatar?</li>\n<li>Is it possible to map the moving of virtual avatar to actual robot?</li>\n<li>Can this be a standard or generic interface to get it work with any type of robot?</li>\n</ul>\n<p>比如教机械手臂洗盘子，先用 3D 建模出通用的两个机械臂加机械手（也可以在 VR 里面模拟），然后让大脑想象打开水龙头，一直手抓盘子，另外一只手洗的动作，让 3D 中的机械臂动起来，然后把 3D 中的点的运动转化成关节的动作，比如一个时间序列，每个时间点上是每个关节运动的角度，接着把这一系列角度传给机器，告诉它这是一次成功的洗盘子。之后可以多次模拟训练，提供数据集，用 reinforcement learning 把这个洗盘子的动作教会给机械臂。</p>\n",
            "tags": []
        },
        {
            "id": "https://bifeitang.github.io/2021/09/06/EEG/EEGBasics/",
            "url": "https://bifeitang.github.io/2021/09/06/EEG/EEGBasics/",
            "title": "EEG Data Preprocessing",
            "date_published": "2021-09-07T00:00:14.000Z",
            "content_html": "<p><img data-src=\"https://eeglab.org/assets/images/tutorial_image.jpg\" alt=\"\" /></p>\n<h2 id=\"basics-about-eeg-data\"><a class=\"anchor\" href=\"#basics-about-eeg-data\">#</a> Basics about EEG data</h2>\n<p>EEG Waveforms display a rhythmic pattern. According to different types of activity human perform, the waveform falls into distinct rhythms of frequency range as following.</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Frequency</th>\n<th>Activity</th>\n<th>Location</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Gamma</strong></td>\n<td>20 - 60 Hz</td>\n<td>Visual Attention</td>\n<td>Occipital</td>\n</tr>\n<tr>\n<td><strong>Beta</strong></td>\n<td>14 - 20 Hz</td>\n<td>Mental Activity</td>\n<td>Parietal and frontal</td>\n</tr>\n<tr>\n<td><strong>Alpha</strong></td>\n<td>8 - 13 Hz</td>\n<td>Sensory Stimulation</td>\n<td>Occipital and parietal</td>\n</tr>\n<tr>\n<td><strong>Theta</strong></td>\n<td>4 - 8 Hz</td>\n<td>Emotional Stress</td>\n<td>Temporal and parietal</td>\n</tr>\n<tr>\n<td><strong>Delta</strong></td>\n<td>Less than 4 Hz</td>\n<td>Occur during sleep, coma</td>\n<td>Everywhere</td>\n</tr>\n</tbody>\n</table>\n<p><mark>Why the naming of frequency ranges dose not follow the order of alphabetic order?</mark></p>\n<h2 id=\"eeg-data-preprocessing\"><a class=\"anchor\" href=\"#eeg-data-preprocessing\">#</a> EEG Data Preprocessing</h2>\n<p>To make sense of EEG data from its raw value, we need to extract meaningful information from it.</p>\n<p>Following are commonly used tools</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zY2NuLnVjc2QuZWR1L2VlZ2xhYi9pbmRleC5waHA=\">EEGLAB</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tbmUudG9vbHMvc3RhYmxlL2luZGV4Lmh0bWw=\">Python-EEG: MNE-Python</span></li>\n</ul>\n<p>The order for processing steps changes differently from article to article.</p>\n<h3 id=\"1-import-event-markers-and-channel-locations\"><a class=\"anchor\" href=\"#1-import-event-markers-and-channel-locations\">#</a> 1. <strong>Import event markers and channel locations</strong></h3>\n<p>When load EEG data with EEGLAB, it will display name and value for each channel. But it doesn't know the scalp locations of the recording electrodes. EEGLAB can read channel labels and correlate with channels locations in a default database of 385 defined channels labels, which is  <code>standard-10-5-cap385</code> .</p>\n<h3 id=\"2-remove-irrelevant-channels\"><a class=\"anchor\" href=\"#2-remove-irrelevant-channels\">#</a> 2. <strong>Remove irrelevant channels</strong></h3>\n<p>Remove channels that are not needed at later stage, like <em>bilateral mastoid</em> electrodes (TP9, TP10), or  <em>electro</em>-<em>optical</em> data.</p>\n<h3 id=\"3-filtering\"><a class=\"anchor\" href=\"#3-filtering\">#</a> 3. <strong>Filtering</strong></h3>\n<p>Following are basic filter types</p>\n<ul>\n<li><strong>Hight pass filter</strong></li>\n<li><strong>Low Pass Filter</strong></li>\n<li><strong>Band Pass Filter</strong></li>\n<li><strong>Band Stop (Notch) Filter</strong></li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/P80ysEnyG0UKqeGNRgLc09Q-IMGmKBjmnqlHgV7VJcrmlE4rrl3088wKu2cmzfXf3CLbsynqi2iIhBB3CEIb-g0-Rw2SxnlEdcwVRGo0aQYl-lyhvw9xSAP19phglEnIB9xdXCYr\" alt=\"\" /></p>\n<p>As picture shown above, the green line is cut of frequency. Y-axis is normalized output power.</p>\n<h3 id=\"4-extract-epochs\"><a class=\"anchor\" href=\"#4-extract-epochs\">#</a> 4. Extract Epochs</h3>\n<p>Subdivide EEG data into different segments (epochs).</p>\n<p>The data are recorded from the beginning to the end of the experiment, but we are only interested in the signal of the event when the subject receives a stimulus or makes a response. So we have to slice and dice the data into segments according to the marks we put on them, and drop the data outside of the range.</p>\n<p>One common ERP (Event-Related-Potential) takes a time span which is 200ms before the event and 1000ms after the event, as almost all ERP components are generated within 1 second. However, if time-frequency analysis is required at a later stage, the segmentation time needs to be extended to cover the time period from 1 second before to 2 seconds after the event, as the algorithm for time-frequency analysis requires the data to be of a certain length.</p>\n<h3 id=\"5-baseline-correction\"><a class=\"anchor\" href=\"#5-baseline-correction\">#</a> 5. Baseline Correction</h3>\n<p>There's two reason for baseline correction.</p>\n<ul>\n<li>As a time-resolving signal, EEG may have temporal upward <strong>drifts</strong> that are unrelated to the experiment due to various reasons. After the segmentation, the start of each segment will not be in the same place due to the upward drift, which will also make the absolute amplitude of the segment higher. Baseline correction corrects for this drift, so that each segment has a similar starting point.</li>\n<li>In ERP experiments, we are interested in what kind of changes the stimulus event brings to the subject and therefore need to have a comparison. Before the event, we consider the issue to be in a relatively calm state. So we take the EEG activity during this time as a baseline and compare it against the after-event data to discern the actual reaction to the stimulus.</li>\n</ul>\n<p>Traditional way for baseline correction is subtracting the mean of a baseline period from every time point of the baseline and post-stimulus interval.</p>\n<h3 id=\"6-re-referencing\"><a class=\"anchor\" href=\"#6-re-referencing\">#</a> 6. Re-referencing</h3>\n<p>EEG recordings are collected by measuring the potential differences between current electrode and the reference electrode. The recording has following characters</p>\n<ul>\n<li><code>Reference voltage</code>  can be a combination of electrodes.</li>\n<li>Other electrodes will reflect the change at reference electrodes.</li>\n<li>The chosen of EEG reference will greatly impact the data<br />\ne.g. <em>Picture taken from</em> <em><span class=\"exturl\" data-url=\"aHR0cDovL21hcnRpbm9zLm9yZy9tbmUvc3RhYmxlL2F1dG9fZXhhbXBsZXMvcHJlcHJvY2Vzc2luZy9wbG90X3JlcmVmZXJlbmNlX2VlZy5odG1sI3NwaHgtZ2xyLWF1dG8tZXhhbXBsZXMtcHJlcHJvY2Vzc2luZy1wbG90LXJlcmVmZXJlbmNlLWVlZy1weQ==\">http://martinos.org/mne/stable/auto_examples/preprocessing/plot_rereference_eeg.html#sphx-glr-auto-examples-preprocessing-plot-rereference-eeg-py</span> <span class=\"exturl\" data-url=\"aHR0cDovL2xlYXJuLm5ldXJvdGVjaGVkdS5jb20vcHJlcHJvY2Vzc2luZy8jcmVmZXJlbmNlcw==\">(15)</span></em><br />\n<img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/different-references.png\" alt=\"\" /></li>\n</ul>\n<p>The re-referencing formula can be</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>V</mi><mrow><mi>c</mi><mi>u</mi><mi>r</mi><mi>c</mi><mi>h</mi><mi>a</mi><mi>n</mi></mrow></msub><mo>=</mo><msub><mi>V</mi><mrow><mi>p</mi><mi>r</mi><mi>e</mi><mi>v</mi><mi>c</mi><mi>h</mi><mi>a</mi><mi>n</mi></mrow></msub><mo>+</mo><msub><mi>V</mi><mrow><mi>p</mi><mi>r</mi><mi>e</mi><mi>v</mi><mi>r</mi><mi>e</mi><mi>f</mi></mrow></msub><mo>−</mo><msub><mi>V</mi><mrow><mi>c</mi><mi>u</mi><mi>r</mi><mi>r</mi><mi>e</mi><mi>f</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">V_{curchan} = V_{prevchan} + V_{prevref} - V_{curref}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">h</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">h</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">p</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.969438em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<h3 id=\"7-downsampling\"><a class=\"anchor\" href=\"#7-downsampling\">#</a> 7. Downsampling</h3>\n<p>Downsampling is used to reduce the amount of data while maintaining the information needed.</p>\n<p>There's two points to pay attention</p>\n<ol>\n<li><strong>Downsampling should happens after filtering</strong>, since it will cause the loss or distortion of high frequency information. To ensure the interested signal is not distorted, it is better to filter it out before downsampling.</li>\n<li><strong>Nyquist–Shannon sampling theorem</strong> Sampling rate <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>s</mi></msub></mrow><annotation encoding=\"application/x-tex\">f_s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>​ should at least be twice of the bandwidth we are interested. <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>s</mi></msub><mo>&gt;</mo><mn>2</mn><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">f_s &gt; 2B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>​ E.g. The samples of two sine waves can be identical when at least one of them is at a frequency above half the sample rate. The suggested <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mi>s</mi></msub></mrow><annotation encoding=\"application/x-tex\">f_s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>​ is 3rd or 4th times of the bandwidth interested.</li>\n</ol>\n<h3 id=\"8-interpolation\"><a class=\"anchor\" href=\"#8-interpolation\">#</a> 8. Interpolation</h3>\n<p>Interpolation fills the bad channels' missing data basing on the other good channels' data. The most common way for interpolation is called  <code>spherical splines</code> , which consists of following steps</p>\n<blockquote>\n<ol>\n<li>Project the channel locations onto a unit sphere (representing the head)</li>\n<li>Compute a matrix that describes the relationship between the good and bad electrodes</li>\n<li>Use the result from (2) to interpolate the data for bad electrodes</li>\n</ol>\n<p><em><strong>Source: <span class=\"exturl\" data-url=\"aHR0cDovL2xlYXJuLm5ldXJvdGVjaGVkdS5jb20vcHJlcHJvY2Vzc2luZy8jaW50ZXJwb2xhdGlvbg==\">http://learn.neurotechedu.com/preprocessing/#interpolation</span></strong></em></p>\n</blockquote>\n<h3 id=\"9-artifacts-correction\"><a class=\"anchor\" href=\"#9-artifacts-correction\">#</a> 9. Artifacts Correction</h3>\n<p>Artifacts correction removes the neural signals that are not useful for the analysis.</p>\n<ul>\n<li><strong>Type of artifacts</strong>:\n<ul>\n<li><em>Environmental Artifacts:</em> like power lines, electrodes losing contact or other people’s movement during the experiment</li>\n<li><em>Biological Artifacts</em>: like blinks, eye movements, head movements, heart beats and muscular noise</li>\n</ul>\n</li>\n<li><strong>Source Separation</strong>: picks apart different contributions to a measured signal\n<ul>\n<li><strong>ICA</strong>: Independent Component Analysis</li>\n<li><strong>PCA</strong>: Principal Component Analysis</li>\n<li><strong>SSP</strong>: Signal Space Projection</li>\n</ul>\n</li>\n<li><strong>Source Localization</strong>: estimate the signal's localization in the brain\n<ul>\n<li><strong>Diploe Fit</strong>: model the brain's behavior as oscillating dipoles in specific positions</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"10-reject-extreme-values\"><a class=\"anchor\" href=\"#10-reject-extreme-values\">#</a> 10. Reject extreme values</h3>\n<p>As last step, one can remove extreme values like trials value <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>&gt;</mo><mn>100</mn><mi>μ</mi><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">&gt; 100 \\mu V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord mathnormal\">μ</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span> or <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>&lt;</mo><mn>100</mn><mi>μ</mi><mi>V</mi></mrow><annotation encoding=\"application/x-tex\">&lt; 100 \\mu V</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord mathnormal\">μ</span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">V</span></span></span></span>. Since such large variance can't be triggered by common cognitive activity.</p>\n<h2 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lZWdsYWIub3JnL3R1dG9yaWFscy8=\">https://eeglab.org/tutorials/</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2xlYXJuLm5ldXJvdGVjaGVkdS5jb20vcHJlcHJvY2Vzc2luZy8=\">http://learn.neurotechedu.com/preprocessing/</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZXVyby5pbmYudW5pYmUuY2gvQWxnb3JpdGhtc05ldXJvc2NpZW5jZS9UdXRvcmlhbF9maWxlcy9JbnRyb2R1Y3Rpb24uaHRtbA==\">https://neuro.inf.unibe.ch/AlgorithmsNeuroscience/Tutorial_files/Introduction.html</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wcmVzc3JlbGVhc2UuYnJhaW5wcm9kdWN0cy5jb20vcmVmZXJlbmNpbmcv\">https://pressrelease.brainproducts.com/referencing/</span></li>\n</ul>\n",
            "tags": [
                "EEG",
                "EEG"
            ]
        },
        {
            "id": "https://bifeitang.github.io/2021/09/03/ExoSkeleton/MovingSeq/",
            "url": "https://bifeitang.github.io/2021/09/03/ExoSkeleton/MovingSeq/",
            "title": "",
            "date_published": "2021-09-03T14:33:04.065Z",
            "content_html": "<h2 id=\"walking\"><a class=\"anchor\" href=\"#walking\">#</a> Walking</h2>\n<ul>\n<li>From Standing to Walking</li>\n</ul>\n<pre class=\"mermaid\"><svg id=\"mermaid-1631241270502\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"522\" style=\"max-width: 674.0625px;\" viewBox=\"0 0 674.0625 522\"><g transform=\"translate(0, 1)\"><marker id=\"flowchart-pointEnd\" class=\"marker flowchart\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"userSpaceOnUse\" markerWidth=\"12\" markerHeight=\"12\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowMarkerPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker><marker id=\"flowchart-pointStart\" class=\"marker flowchart\" viewBox=\"0 0 10 10\" refX=\"0\" refY=\"5\" markerUnits=\"userSpaceOnUse\" markerWidth=\"12\" markerHeight=\"12\" orient=\"auto\"><path d=\"M 0 5 L 10 10 L 10 0 z\" class=\"arrowMarkerPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker><marker id=\"flowchart-circleEnd\" class=\"marker flowchart\" viewBox=\"0 0 10 10\" refX=\"11\" refY=\"5\" markerUnits=\"userSpaceOnUse\" markerWidth=\"11\" markerHeight=\"11\" orient=\"auto\"><circle cx=\"5\" cy=\"5\" r=\"5\" class=\"arrowMarkerPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></circle></marker><marker id=\"flowchart-circleStart\" class=\"marker flowchart\" viewBox=\"0 0 10 10\" refX=\"-1\" refY=\"5\" markerUnits=\"userSpaceOnUse\" markerWidth=\"11\" markerHeight=\"11\" orient=\"auto\"><circle cx=\"5\" cy=\"5\" r=\"5\" class=\"arrowMarkerPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></circle></marker><marker id=\"flowchart-crossEnd\" class=\"marker cross flowchart\" viewBox=\"0 0 11 11\" refX=\"12\" refY=\"5.2\" markerUnits=\"userSpaceOnUse\" markerWidth=\"11\" markerHeight=\"11\" orient=\"auto\"><path d=\"M 1,1 l 9,9 M 10,1 l -9,9\" class=\"arrowMarkerPath\" style=\"stroke-width: 2; stroke-dasharray: 1, 0;\"></path></marker><marker id=\"flowchart-crossStart\" class=\"marker cross flowchart\" viewBox=\"0 0 11 11\" refX=\"-1\" refY=\"5.2\" markerUnits=\"userSpaceOnUse\" markerWidth=\"11\" markerHeight=\"11\" orient=\"auto\"><path d=\"M 1,1 l 9,9 M 10,1 l -9,9\" class=\"arrowMarkerPath\" style=\"stroke-width: 2; stroke-dasharray: 1, 0;\"></path></marker><g class=\"root\"><g class=\"clusters\"></g><g class=\"edgePaths\"><path d=\"M337.03125,429L337.03125,433.1666666666667C337.03125,437.3333333333333,337.03125,445.6666666666667,337.03125,454C337.03125,462.3333333333333,337.03125,470.6666666666667,337.03125,474.8333333333333L337.03125,479\" id=\"L-Filter-Output\" class=\" edge-thickness-normal edge-pattern-solid flowchart-link LS-Filter LE-Output\" marker-end=\"url(#flowchart-pointEnd)\"></path><path d=\"M337.03125,345L337.03125,349.1666666666667C337.03125,353.3333333333333,337.03125,361.6666666666667,337.03125,370C337.03125,378.3333333333333,337.03125,386.6666666666667,337.03125,390.8333333333333L337.03125,395\" id=\"L-Initialization-Filter\" class=\" edge-thickness-normal edge-pattern-solid flowchart-link LS-Initialization LE-Filter\" marker-end=\"url(#flowchart-pointEnd)\"></path></g><g class=\"edgeLabels\"><g class=\"edgeLabel\"><g class=\"label\" transform=\"translate(0, 0)\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"0\" class=\"row\"></tspan></text></g></g><g class=\"edgeLabel\"><g class=\"label\" transform=\"translate(0, 0)\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"0\" class=\"row\"></tspan></text></g></g></g><g class=\"nodes\"><g class=\"root\" transform=\"translate(0, 0)\"><g class=\"clusters\"><g class=\"cluster\" id=\"Initialization\"><rect rx=\"0\" ry=\"0\" x=\"8\" y=\"8\" width=\"658.0625\" height=\"336\"></rect><g class=\"cluster-label\" transform=\"translate(291.734375, 6)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"0\" class=\"row\">Initialization</tspan></text></g></g></g><g class=\"edgePaths\"><path d=\"M337.03125,67L337.03125,71.16666666666667C337.03125,75.33333333333333,337.03125,83.66666666666667,337.03125,92C337.03125,100.33333333333333,337.03125,108.66666666666667,337.03125,112.83333333333333L337.03125,117\" id=\"L-hka-process1\" class=\" edge-thickness-normal edge-pattern-solid flowchart-link LS-hka LE-process1\" marker-end=\"url(#flowchart-pointEnd)\"></path><path d=\"M337.03125,151L337.03125,155.16666666666666C337.03125,159.33333333333334,337.03125,167.66666666666666,337.03125,176C337.03125,184.33333333333334,337.03125,192.66666666666666,337.03125,196.83333333333334L337.03125,201\" id=\"L-process1-process2\" class=\" edge-thickness-normal edge-pattern-solid flowchart-link LS-process1 LE-process2\" marker-end=\"url(#flowchart-pointEnd)\"></path><path d=\"M337.03125,235L337.03125,239.16666666666666C337.03125,243.33333333333334,337.03125,251.66666666666666,337.03125,260C337.03125,268.3333333333333,337.03125,276.6666666666667,337.03125,280.8333333333333L337.03125,285\" id=\"L-process2-process3\" class=\" edge-thickness-normal edge-pattern-solid flowchart-link LS-process2 LE-process3\" marker-end=\"url(#flowchart-pointEnd)\"></path></g><g class=\"edgeLabels\"><g class=\"edgeLabel\"><g class=\"label\" transform=\"translate(0, 0)\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"0\" class=\"row\"></tspan></text></g></g><g class=\"edgeLabel\"><g class=\"label\" transform=\"translate(0, 0)\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"0\" class=\"row\"></tspan></text></g></g><g class=\"edgeLabel\"><g class=\"label\" transform=\"translate(0, 0)\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"0\" class=\"row\"></tspan></text></g></g></g><g class=\"nodes\"><g class=\"node default default\" id=\"flowchart-hka-11\" transform=\"translate(337.03125, 50)\"><rect class=\"basic label-container\" style=\"\" rx=\"5\" ry=\"5\" x=\"-192.3671875\" y=\"-17\" width=\"384.734375\" height=\"34\"></rect><g class=\"label\" style=\"\" transform=\"translate(-184.8671875, -9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"0\" class=\"row\">hkaraw.mat: noPoints x noJoints = 1000 x 3 doubles</tspan></text></g></g><g class=\"node default default\" id=\"flowchart-process1-13\" transform=\"translate(337.03125, 134)\"><rect class=\"basic label-container\" style=\"\" rx=\"5\" ry=\"5\" x=\"-294.03125\" y=\"-17\" width=\"588.0625\" height=\"34\"></rect><g class=\"label\" style=\"\" transform=\"translate(-286.53125, -9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"0\" class=\"row\">Add end point constraint, make the hka last 5 points equals to the first 5 points</tspan></text></g></g><g class=\"node default default\" id=\"flowchart-process2-15\" transform=\"translate(337.03125, 218)\"><rect class=\"basic label-container\" style=\"\" rx=\"5\" ry=\"5\" x=\"-97.8203125\" y=\"-17\" width=\"195.640625\" height=\"34\"></rect><g class=\"label\" style=\"\" transform=\"translate(-90.3203125, -9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"0\" class=\"row\">replicate the hka 3 times</tspan></text></g></g><g class=\"node default default\" id=\"flowchart-process3-17\" transform=\"translate(337.03125, 302)\"><rect class=\"basic label-container\" style=\"\" rx=\"5\" ry=\"5\" x=\"-33.5078125\" y=\"-17\" width=\"67.015625\" height=\"34\"></rect><g class=\"label\" style=\"\" transform=\"translate(-26.0078125, -9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"0\" class=\"row\">smooth</tspan></text></g></g></g></g><g class=\"node default default\" id=\"flowchart-Filter-19\" transform=\"translate(337.03125, 412)\"><rect class=\"basic label-container\" style=\"\" rx=\"0\" ry=\"0\" x=\"-86.3828125\" y=\"-17\" width=\"172.765625\" height=\"34\"></rect><g class=\"label\" style=\"\" transform=\"translate(-78.8828125, -9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"0\" class=\"row\">Low Pass Butter Filter</tspan></text></g></g><g class=\"node default default\" id=\"flowchart-Output-21\" transform=\"translate(337.03125, 496)\"><rect class=\"basic label-container\" style=\"\" rx=\"0\" ry=\"0\" x=\"-77.5078125\" y=\"-17\" width=\"155.015625\" height=\"34\"></rect><g class=\"label\" style=\"\" transform=\"translate(-70.0078125, -9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"0\" class=\"row\">Output hkaSim.mat</tspan></text></g></g></g></g></g></svg></pre><ul>\n<li>Exo Simulation Initialization: Assign constants variables to workspace\n<ul>\n<li><strong>Bits Resolution</strong>: Encoder, Control Signal, Msg Type</li>\n<li><strong>Joint Data ID</strong>: CAN Encoder &amp; Motor Status &amp; Torque &amp;  Voltage/Current/Temperature</li>\n<li><strong>CAN Node ID</strong>: Main controller, Right &amp; Left hip, Right &amp; Left knee, Right &amp; Left ankle</li>\n<li><strong>Encoder Calibration</strong></li>\n<li><strong>Encoder Offset</strong></li>\n<li><strong>CAN message ID</strong>: create bus object for CAN message</li>\n<li><strong>Gait Profile Data</strong>:  <code>hkaSim.mat</code>  ( <code>structvar</code> )\n<ul>\n<li>Initial value for heel strike</li>\n<li>Add transitions from standing still to walking (saved under  <code>hka.signals.values</code> )</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Common practice (Rex paper, children, adult, Luu)\n<ul>\n<li>Standing</li>\n<li>Sitting</li>\n<li>Walking</li>\n<li>See what the sequence for rex</li>\n</ul>\n</li>\n<li>To do\n<ul>\n<li>How to save this data to the main controller (as binary)</li>\n<li>Read from main controller</li>\n<li>Compare data</li>\n</ul>\n</li>\n<li>Torque, Rawan, database</li>\n</ul>\n<h2 id=\"trajectory-planning\"><a class=\"anchor\" href=\"#trajectory-planning\">#</a> Trajectory Planning</h2>\n<figure class=\"highlight matlab\"><figcaption data-lang=\"MATLAB\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">trajPlanning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>clc<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>close all<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">% Input</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>q0 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>v0 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>q1 <span class=\"token operator\">=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>v1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>constraint <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>q0<span class=\"token punctuation\">;</span> v0<span class=\"token punctuation\">;</span> q1<span class=\"token punctuation\">;</span> v1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Atransform <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>              <span class=\"token operator\">-</span><span class=\"token number\">3</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>              <span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>              <span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>coeff <span class=\"token operator\">=</span> Atransform<span class=\"token operator\">*</span>constraint<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>Fs <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">% Hz</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>Ts <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token operator\">/</span>Fs<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>tdes <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">% In second</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>Npoints <span class=\"token operator\">=</span> Fs<span class=\"token operator\">*</span>tdes<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>tArray <span class=\"token operator\">=</span> <span class=\"token function\">linspace</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>Npoints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token number\">i</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> Npoints</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    t <span class=\"token operator\">=</span> <span class=\"token function\">tArray</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token function\">traj</span><span class=\"token punctuation\">(</span><span class=\"token number\">i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">coeff</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>t<span class=\"token operator\">^</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span> <span class=\"token function\">coeff</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>t<span class=\"token operator\">^</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token function\">coeff</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>t <span class=\"token operator\">+</span> <span class=\"token function\">coeff</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    </pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token function\">subplot</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token function\">plot</span><span class=\"token punctuation\">(</span>tArray<span class=\"token punctuation\">,</span>traj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token function\">subplot</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>vel <span class=\"token operator\">=</span> <span class=\"token function\">diff</span><span class=\"token punctuation\">(</span>traj<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>Ts<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token function\">plot</span><span class=\"token punctuation\">(</span><span class=\"token function\">tArray</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">:</span><span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>vel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token function\">subplot</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>acc <span class=\"token operator\">=</span> <span class=\"token function\">diff</span><span class=\"token punctuation\">(</span>vel<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>Ts<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token function\">plot</span><span class=\"token punctuation\">(</span><span class=\"token function\">tArray</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token operator\">:</span><span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>acc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token function\">subplot</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>jerk <span class=\"token operator\">=</span> <span class=\"token function\">diff</span><span class=\"token punctuation\">(</span>acc<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>Ts<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token function\">plot</span><span class=\"token punctuation\">(</span><span class=\"token function\">tArray</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token operator\">:</span><span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>jerk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"overview\"><a class=\"anchor\" href=\"#overview\">#</a> Overview</h2>\n<pre class=\"mermaid\"><svg id=\"mermaid-1631241272432\" width=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" height=\"134\" style=\"max-width: 206.546875px;\" viewBox=\"0 0 206.546875 134\"><g transform=\"translate(0, 0)\"><marker id=\"flowchart-pointEnd\" class=\"marker flowchart\" viewBox=\"0 0 10 10\" refX=\"9\" refY=\"5\" markerUnits=\"userSpaceOnUse\" markerWidth=\"12\" markerHeight=\"12\" orient=\"auto\"><path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"arrowMarkerPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker><marker id=\"flowchart-pointStart\" class=\"marker flowchart\" viewBox=\"0 0 10 10\" refX=\"0\" refY=\"5\" markerUnits=\"userSpaceOnUse\" markerWidth=\"12\" markerHeight=\"12\" orient=\"auto\"><path d=\"M 0 5 L 10 10 L 10 0 z\" class=\"arrowMarkerPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></path></marker><marker id=\"flowchart-circleEnd\" class=\"marker flowchart\" viewBox=\"0 0 10 10\" refX=\"11\" refY=\"5\" markerUnits=\"userSpaceOnUse\" markerWidth=\"11\" markerHeight=\"11\" orient=\"auto\"><circle cx=\"5\" cy=\"5\" r=\"5\" class=\"arrowMarkerPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></circle></marker><marker id=\"flowchart-circleStart\" class=\"marker flowchart\" viewBox=\"0 0 10 10\" refX=\"-1\" refY=\"5\" markerUnits=\"userSpaceOnUse\" markerWidth=\"11\" markerHeight=\"11\" orient=\"auto\"><circle cx=\"5\" cy=\"5\" r=\"5\" class=\"arrowMarkerPath\" style=\"stroke-width: 1; stroke-dasharray: 1, 0;\"></circle></marker><marker id=\"flowchart-crossEnd\" class=\"marker cross flowchart\" viewBox=\"0 0 11 11\" refX=\"12\" refY=\"5.2\" markerUnits=\"userSpaceOnUse\" markerWidth=\"11\" markerHeight=\"11\" orient=\"auto\"><path d=\"M 1,1 l 9,9 M 10,1 l -9,9\" class=\"arrowMarkerPath\" style=\"stroke-width: 2; stroke-dasharray: 1, 0;\"></path></marker><marker id=\"flowchart-crossStart\" class=\"marker cross flowchart\" viewBox=\"0 0 11 11\" refX=\"-1\" refY=\"5.2\" markerUnits=\"userSpaceOnUse\" markerWidth=\"11\" markerHeight=\"11\" orient=\"auto\"><path d=\"M 1,1 l 9,9 M 10,1 l -9,9\" class=\"arrowMarkerPath\" style=\"stroke-width: 2; stroke-dasharray: 1, 0;\"></path></marker><g class=\"root\"><g class=\"clusters\"></g><g class=\"edgePaths\"><path d=\"M46.675223214285715,50L51.17206101190476,45.833333333333336C55.66889880952382,41.666666666666664,64.66257440476191,33.333333333333336,73.48102678571429,29.166666666666668C82.29947916666667,25,90.94270833333333,25,95.26432291666667,25L99.5859375,25\" id=\"L-GUI-JointProfile\" class=\" edge-thickness-normal edge-pattern-solid flowchart-link LS-GUI LE-JointProfile\" marker-end=\"url(#flowchart-pointEnd)\"></path><path d=\"M46.675223214285715,84L51.17206101190476,88.16666666666667C55.66889880952382,92.33333333333333,64.66257440476191,100.66666666666667,73.32607886904762,104.83333333333333C81.98958333333333,109,90.32291666666667,109,94.48958333333333,109L98.65625,109\" id=\"L-GUI-SinAmpFreq\" class=\" edge-thickness-normal edge-pattern-solid flowchart-link LS-GUI LE-SinAmpFreq\" marker-end=\"url(#flowchart-pointEnd)\"></path></g><g class=\"edgeLabels\"><g class=\"edgeLabel\"><g class=\"label\" transform=\"translate(0, 0)\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"0\" class=\"row\"></tspan></text></g></g><g class=\"edgeLabel\"><g class=\"label\" transform=\"translate(0, 0)\"><rect rx=\"0\" ry=\"0\" width=\"0\" height=\"0\"></rect><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"0\" class=\"row\"></tspan></text></g></g></g><g class=\"nodes\"><g class=\"node default default\" id=\"flowchart-GUI-4\" transform=\"translate(28.328125, 67)\"><rect class=\"basic label-container\" style=\"\" rx=\"0\" ry=\"0\" x=\"-20.328125\" y=\"-17\" width=\"40.65625\" height=\"34\"></rect><g class=\"label\" style=\"\" transform=\"translate(-12.828125, -9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"0\" class=\"row\">GUI</tspan></text></g></g><g class=\"node default default\" id=\"flowchart-JointProfile-5\" transform=\"translate(148.6015625, 25)\"><rect class=\"basic label-container\" style=\"\" rx=\"0\" ry=\"0\" x=\"-49.015625\" y=\"-17\" width=\"98.03125\" height=\"34\"></rect><g class=\"label\" style=\"\" transform=\"translate(-41.515625, -9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"0\" class=\"row\">JointProfile</tspan></text></g></g><g class=\"node default default\" id=\"flowchart-SinAmpFreq-7\" transform=\"translate(148.6015625, 109)\"><rect class=\"basic label-container\" style=\"\" rx=\"0\" ry=\"0\" x=\"-49.9453125\" y=\"-17\" width=\"99.890625\" height=\"34\"></rect><g class=\"label\" style=\"\" transform=\"translate(-42.4453125, -9.5)\"><text style=\"\"><tspan xml:space=\"preserve\" dy=\"1em\" x=\"0\" class=\"row\">SinAmpFreq</tspan></text></g></g></g></g></g></svg></pre>",
            "tags": []
        },
        {
            "id": "https://bifeitang.github.io/2021/08/24/fMRI/fMRI-Data-Processing-Basics/",
            "url": "https://bifeitang.github.io/2021/08/24/fMRI/fMRI-Data-Processing-Basics/",
            "title": "fMRI Data Processing Basics",
            "date_published": "2021-08-25T04:52:20.000Z",
            "content_html": "<h1 id=\"resources\"><a class=\"anchor\" href=\"#resources\">#</a> Resources</h1>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9hbmR5c2JyYWluYm9vay5yZWFkdGhlZG9jcy5pby9lbi9sYXRlc3QvaW5kZXguaHRtbA==\">Andy's Brain Book </span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iaWRzLXNwZWNpZmljYXRpb24ucmVhZHRoZWRvY3MuaW8vZW4vc3RhYmxlLw==\">The Brain Imaging Data Structure</span></li>\n</ul>\n<h1 id=\"first-look-at-fmri-data\"><a class=\"anchor\" href=\"#first-look-at-fmri-data\">#</a> First look at fMRI data</h1>\n<h2 id=\"key-concepts\"><a class=\"anchor\" href=\"#key-concepts\">#</a> Key Concepts</h2>\n<p>For a full list, use <span class=\"exturl\" data-url=\"aHR0cHM6Ly90aGV3aW5ub3dlci5jb20vcGFwZXJzLzk3Ny1hLWNoZWNrbGlzdC1mb3ItZm1yaS1hY3F1aXNpdGlvbi1tZXRob2RzLXJlcG9ydGluZy1pbi10aGUtbGl0ZXJhdHVyZQ==\">A checklist for fMRI acquisition methods reporting in the literature</span></p>\n<ul>\n<li><strong>BOLD</strong> :  blood oxygenation-level dependent (contrast)</li>\n<li><strong>TR</strong> : time (in seconds) between scanning successive FMRI volumes.</li>\n<li><strong>TE</strong>: Echo time</li>\n<li><strong>Matrix</strong>=64x64</li>\n<li><strong>FOV</strong>: Field-of-view (e.g. 192 mm)</li>\n<li><strong>Acquisition Voxel Size</strong> 3x3x4mms</li>\n</ul>\n<h2 id=\"data-format\"><a class=\"anchor\" href=\"#data-format\">#</a> Data Format</h2>\n<h3 id=\"motion-regressor\"><a class=\"anchor\" href=\"#motion-regressor\">#</a> Motion Regressor</h3>\n<ul>\n<li>\n<p>For a design matrics created with  <code>FSL</code>  following format</p>\n<blockquote>\n<p>FSL is a comprehensive library of analysis tools for FMRI, MRI and DTI brain imaging data. <span class=\"exturl\" data-url=\"aHR0cHM6Ly9mc2wuZm1yaWIub3guYWMudWsvZnNsL2ZzbHdpa2k=\">Link</span></p>\n</blockquote>\n<p><img data-src=\"./image-20210714014330573.png\" alt=\"image-20210714014330573\" /></p>\n<ul>\n<li>The number of rows is the number of subjects</li>\n<li>The number of columns is the number of linear variables</li>\n<li>The PPheights are the maximum values in the columns</li>\n<li>The means of the columns have been subtracted (first column is age, second is score)</li>\n</ul>\n</li>\n<li>\n<p>Depending on the way of design, in this case, the last 6 columns are used for motion regressors</p>\n</li>\n<li>\n<p>References</p>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWIuc3RhbmZvcmQuZWR1L2dyb3VwL3Zpc3RhL2NnaS1iaW4vd2lraS9pbmRleC5waHAvTXJWaXN0YV9UQlNT\">https://web.stanford.edu/group/vista/cgi-bin/wiki/index.php/MrVista_TBSS</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlzY21haWwuYWMudWsvY2dpLWJpbi93ZWJhZG1pbj9BMj1mc2w7OTQ2ODllYmUuMTgwNQ==\">https://www.jiscmail.ac.uk/cgi-bin/webadmin?A2=fsl;94689ebe.1805</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL21yaXF1ZXN0aW9ucy5jb20vZHRpLXRlbnNvci1pbWFnaW5nLmh0bWw=\">http://mriquestions.com/dti-tensor-imaging.html</span></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"events-data\"><a class=\"anchor\" href=\"#events-data\">#</a> Events Data</h3>\n<ul>\n<li>\n<p>E.g. for data found from <span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcGVubmV1cm8ub3JnL2RhdGFzZXRzL2RzMDAwMTAyL3ZlcnNpb25zLzAwMDAx\">OpenNeuro </span></p>\n<p><img data-src=\"./image-20210825022741854.png\" alt=\"image-20210825022741854\" /></p>\n</li>\n<li>\n<table>\n<thead>\n<tr>\n<th><strong>Column name</strong></th>\n<th><strong>Requirement level</strong></th>\n<th><strong>Data type</strong></th>\n<th><strong>Description</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>onset</strong></td>\n<td>REQUIRED</td>\n<td>number</td>\n<td>Onset (in seconds) of the event measured from the beginning of the acquisition of the first volume in the corresponding task imaging data file. If any acquired scans have been discarded before forming the imaging data file, ensure that a time of 0 corresponds to the first image stored. In other words negative numbers in &quot;onset&quot; are allowed5.</td>\n</tr>\n<tr>\n<td><strong>duration</strong></td>\n<td>REQUIRED</td>\n<td>number</td>\n<td>Duration of the event (measured from onset) in seconds. Must always be either zero or positive. A &quot;duration&quot; value of zero implies that the delta function or event is so short as to be effectively modeled as an impulse.</td>\n</tr>\n<tr>\n<td><strong>sample</strong></td>\n<td>OPTIONAL</td>\n<td>number</td>\n<td>Onset of the event according to the sampling scheme of the recorded modality (that is, referring to the raw data file that the events.tsv file accompanies).</td>\n</tr>\n<tr>\n<td><strong>trial_type</strong></td>\n<td>OPTIONAL</td>\n<td>string</td>\n<td>Primary categorisation of each trial to identify them as instances of the experimental conditions. For example: for a response inhibition task, it could take on values &quot;go&quot; and &quot;no-go&quot; to refer to response initiation and response inhibition experimental conditions.</td>\n</tr>\n<tr>\n<td><strong>response_time</strong></td>\n<td>OPTIONAL</td>\n<td>number</td>\n<td>Response time measured in seconds. A negative response time can be used to represent preemptive responses and &quot;n/a&quot; denotes a missed response.</td>\n</tr>\n<tr>\n<td><strong>value</strong></td>\n<td>OPTIONAL</td>\n<td>string or number</td>\n<td>Marker value associated with the event (for example, the value of a TTL trigger that was recorded at the onset of the event).</td>\n</tr>\n<tr>\n<td><strong>HED</strong></td>\n<td>OPTIONAL</td>\n<td>string</td>\n<td>Hierarchical Event Descriptor (HED) Tag. See Appendix III for details.</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n<h3 id=\"fmri-data\"><a class=\"anchor\" href=\"#fmri-data\">#</a> fMRI Data</h3>\n<ul>\n<li>E.g.<br />\n<img data-src=\"./image-20210714015725940.png\" alt=\"image-20210714015725940\" /></li>\n<li>After processing to get the Region of Interest (ROI)<br />\n<img data-src=\"./image-20210714015611531.png\" alt=\"image-20210714015611531.png\" /></li>\n</ul>\n<h1 id=\"data-processing\"><a class=\"anchor\" href=\"#data-processing\">#</a> Data Processing</h1>\n<h2 id=\"hrfhemodynamic-response-function\"><a class=\"anchor\" href=\"#hrfhemodynamic-response-function\">#</a>  <code>HRF</code> Hemodynamic Response Function</h2>\n<ol>\n<li>\n<p>plot <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mi>r</mi><mi>f</mi><mo>=</mo><mi>g</mi><mi>a</mi><mi>m</mi><mi>m</mi><mi>a</mi><mi>p</mi><mi>d</mi><mi>f</mi><mo stretchy=\"false\">(</mo><msub><mi>α</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>β</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">hrf=gammapdf(\\alpha_1, \\beta_1, t)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span>​;<br />\n<img data-src=\"./image-20210709181542189.png\" alt=\"plot hrf\" title=\"Common Statistic Display for HRF plot in Matlab\" /></p>\n</li>\n<li>\n<p>Why convolve with  <code>Gamma distribution</code> ?</p>\n<ul>\n<li>BOLD (Blood oxygen level dependent) signal looks like a typical Gamma Distribution, this is used to identify the neuron firing<br />\n<img data-src=\"./image-20210706005105094.png\" alt=\"image-20210706005105094\" /></li>\n</ul>\n</li>\n<li>\n<p>Proof</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>σ</mi><mo>=</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">\\sigma = 3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span></span></span></span>, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><msub><mi>y</mi><mn>1</mn></msub><mo>=</mo><mn>5</mn></mrow><annotation encoding=\"application/x-tex\">my_1 = 5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">5</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>α</mi><mn>1</mn></msub><mo>=</mo><msup><mrow><mi>m</mi><msub><mi>y</mi><mn>1</mn></msub></mrow><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><msup><mi>σ</mi><mn>2</mn></msup><mo>=</mo><mn>25</mn><mi mathvariant=\"normal\">/</mi><mn>9</mn></mrow><annotation encoding=\"application/x-tex\">\\alpha_1 = {my_1}^2/\\sigma^2 = 25/9</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mord\">5</span><span class=\"mord\">/</span><span class=\"mord\">9</span></span></span></span></li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>β</mi><mn>1</mn></msub><mo>=</mo><mrow><mi>m</mi><msub><mi>y</mi><mn>1</mn></msub></mrow><mi mathvariant=\"normal\">/</mi><msup><mi>σ</mi><mn>2</mn></msup><mo>=</mo><mn>5</mn><mi mathvariant=\"normal\">/</mi><mn>9</mn></mrow><annotation encoding=\"application/x-tex\">\\beta_1 = {my_1}/\\sigma^2 = 5/9</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">5</span><span class=\"mord\">/</span><span class=\"mord\">9</span></span></span></span></li>\n<li>t = [0, 0.1, 0.2, 0.3, 0.4, ..., 20]</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>e</mi><mi>s</mi><mi>o</mi><mi>l</mi><mi>u</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>=</mo><mn>0.1</mn></mrow><annotation encoding=\"application/x-tex\">resolution = 0.1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">1</span></span></span></span></li>\n<li><code>gammapdf</code> :</li>\n</ul>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>exp</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>a</mi><mo>∗</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>a</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>∗</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>b</mi><mo>∗</mo><mi>x</mi><mo>−</mo><mi>γ</mi><mi>ln</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>a</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msup><mi>e</mi><mrow><mi>a</mi><mo>⋅</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>⋅</mo><msup><mi>e</mi><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>⋅</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>b</mi><mi>x</mi></mrow></msup><mo>⋅</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>γ</mi><mi>l</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msup><mi>b</mi><mi>a</mi></msup><mo>∗</mo><msup><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup><mo>∗</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>b</mi><mi>x</mi></mrow></msup><mo>∗</mo><mi>γ</mi><mi>l</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><msup><mi>b</mi><mi>a</mi></msup><mo>∗</mo><msup><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><mi>a</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup><mo>∗</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>b</mi><mi>x</mi></mrow></msup><mo>∗</mo><mfrac><mn>1</mn><mrow><mi mathvariant=\"normal\">Γ</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo stretchy=\"false\">)</mo></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n&amp;\\exp(a*log(b) + (a-1)*log(x) - b*x - \\gamma \\ln(a)) \\\\\n&amp;= e^{a \\cdot log(b)} \\cdot e^{(a-1)log(x)} \\cdot e^{-bx} \\cdot e^{- \\gamma ln(a)} \\\\\n&amp;= b^a *x^{(a-1)}* e^{-bx}*\\gamma ln(a) \\\\\n&amp;= b^a *x^{(a-1)}* e^{-bx}* \\dfrac{1}{\\Gamma(a)}\n\\end{aligned}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:7.253440000000002em;vertical-align:-3.3767200000000015em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.8767200000000006em;\"><span style=\"top:-6.358160000000001em;\"><span class=\"pstrut\" style=\"height:3.32144em;\"></span><span class=\"mord\"></span></span><span style=\"top:-4.76016em;\"><span class=\"pstrut\" style=\"height:3.32144em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.162159999999999em;\"><span class=\"pstrut\" style=\"height:3.32144em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.1807199999999987em;\"><span class=\"pstrut\" style=\"height:3.32144em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.3767200000000015em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.8767200000000006em;\"><span style=\"top:-6.358160000000001em;\"><span class=\"pstrut\" style=\"height:3.32144em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">exp</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">ln</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span><span style=\"top:-4.76016em;\"><span class=\"pstrut\" style=\"height:3.32144em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span><span class=\"mbin mtight\">⋅</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.162159999999999em;\"><span class=\"pstrut\" style=\"height:3.32144em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span></span></span><span style=\"top:-1.1807199999999987em;\"><span class=\"pstrut\" style=\"height:3.32144em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7143919999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991079999999999em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">Γ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.3767200000000015em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<ul>\n<li>Use <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>α</mi><mn>1</mn></msub><mo>=</mo><mi>a</mi><mo separator=\"true\">,</mo><msub><mi>β</mi><mn>1</mn></msub><mo>=</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha_1 = a, \\beta_1 = b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>, (Use <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>γ</mi><mi>l</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\gamma ln(a)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span></span></span></span> to approximate <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Γ</mi><mo stretchy=\"false\">(</mo><mi>a</mi><msup><mo stretchy=\"false\">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\Gamma(a) ^ {-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\">Γ</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span></span></span></span>)</li>\n</ul>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>G</mi><mi>a</mi><mi>m</mi><mi>m</mi><mi>a</mi><mtext>  </mtext><mi>D</mi><mi>i</mi><mi>s</mi><mi>t</mi><mi>r</mi><mi>i</mi><mi>b</mi><mi>u</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>=</mo><mfrac><mrow><msup><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><msub><mi>α</mi><mn>1</mn></msub><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup><msubsup><mi>β</mi><mn>1</mn><msub><mi>α</mi><mn>1</mn></msub></msubsup><msup><mi>e</mi><mrow><mo>−</mo><msub><mi>β</mi><mn>1</mn></msub><mi>x</mi></mrow></msup></mrow><mrow><mi mathvariant=\"normal\">Γ</mi><mo stretchy=\"false\">(</mo><msub><mi>α</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">Gamma \\; Distribution = \\frac{x^{(\\alpha_1-1)}\\beta_1^{\\alpha_1}e^{-\\beta_1x}}{\\Gamma(\\alpha_1)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.501em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.565em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">Γ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8879999999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.0037em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.746292em;\"><span style=\"top:-2.433692em;margin-left:-0.05278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.1449000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.0037em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.266308em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.05278em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n</li>\n<li>\n<p>Supplementary</p>\n<ul>\n<li><img data-src=\"./image-20210709174054933.png\" alt=\"image-20210709174054933\" /></li>\n<li><img data-src=\"./image-20210709174149366.png\" alt=\"image-20210709174149366\" /></li>\n</ul>\n</li>\n<li>\n<p>Properties</p>\n</li>\n</ol>\n<blockquote>\n<p>Evaluates a gamma of parameters a,b for all values in vector x</p>\n<p>Will have mean m and variance v: <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>=</mo><mi>a</mi><mi mathvariant=\"normal\">/</mi><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">m = a/b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord\">/</span><span class=\"mord mathnormal\">b</span></span></span></span>; <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi><mo>=</mo><mi>a</mi><mi mathvariant=\"normal\">/</mi><msup><mi>b</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">v = a/b^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord\">/</span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>;</p>\n<p>so, <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>=</mo><msup><mi>m</mi><mn>2</mn></msup><mi mathvariant=\"normal\">/</mi><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">a = m^2/v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span>; <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mo>=</mo><mi>m</mi><mi mathvariant=\"normal\">/</mi><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">b = m/v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord\">/</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span>;</p>\n</blockquote>\n<ul>\n<li>mean = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>α</mi><mn>1</mn></msub><mi mathvariant=\"normal\">/</mi><msub><mi>β</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">\\alpha_1/\\beta_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, variance = <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>α</mi><mn>1</mn></msub><mi mathvariant=\"normal\">/</mi><msubsup><mi>β</mi><mn>1</mn><mn>2</mn></msubsup></mrow><annotation encoding=\"application/x-tex\">\\alpha_1/\\beta_1^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">/</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05278em;\">β</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-2.4518920000000004em;margin-left:-0.05278em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.24810799999999997em;\"><span></span></span></span></span></span></span></span></span></span></li>\n<li><code>PDF</code> (probability distribution function)</li>\n<li>for  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>⩾</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">x \\geqslant 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7733399999999999em;vertical-align:-0.13667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel amsrm\">⩾</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>:<br />\n<img data-src=\"./image-20210709174439817.png\" alt=\"image-20210709174439817\" /></li>\n</ul>\n<h2 id=\"design-matrix\"><a class=\"anchor\" href=\"#design-matrix\">#</a> Design Matrix</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mc2wuZm1yaWIub3guYWMudWsvZnNsL2ZzbHdpa2kvRkVBVC9Vc2VyR3VpZGUjQXBwZW5kaXhfQjpfRGVzaWduX01hdHJpeF9SdWxlcw==\">https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FEAT/UserGuide#Appendix_B:_Design_Matrix_Rules</span></li>\n<li><img data-src=\"./image-20210714004332208.png\" alt=\"image-20210714004332208\" /></li>\n<li><img data-src=\"./image-20210714004446402.png\" alt=\"image-20210714004446402\" /></li>\n</ul>\n<h2 id=\"t-test\"><a class=\"anchor\" href=\"#t-test\">#</a> T-Test</h2>\n<h1 id=\"roi\"><a class=\"anchor\" href=\"#roi\">#</a> ROI</h1>\n<p>How to find the Reigon of Interest</p>\n",
            "tags": [
                "fMRI",
                "fMRI",
                "HRF"
            ]
        },
        {
            "id": "https://bifeitang.github.io/2021/08/22/My-Interesting-Projects-at-a-Glance/",
            "url": "https://bifeitang.github.io/2021/08/22/My-Interesting-Projects-at-a-Glance/",
            "title": "My Interesting Projects at a Glance",
            "date_published": "2021-08-22T09:00:26.000Z",
            "content_html": "<h2 id=\"research-project\"><a class=\"anchor\" href=\"#research-project\">#</a> Research Project</h2>\n<ul>\n<li>Exo Skeleton with University of Houston</li>\n<li>Grid Cell personal interest reseach<br />\n<a href=\"/2021/08/22/IntelligenceAndBrainTheories/Grid-Cell-and-Conceptual-Learning/\" title=\"Grid Cell and Conceptual Learning\">Grid Cell and Conceptual Learning</a></li>\n<li>Reinforcement Learning</li>\n<li></li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://bifeitang.github.io/2021/08/22/IntelligenceAndBrainTheories/Grid-Cell-and-Conceptual-Learning/",
            "url": "https://bifeitang.github.io/2021/08/22/IntelligenceAndBrainTheories/Grid-Cell-and-Conceptual-Learning/",
            "title": "Grid Cell and Conceptual Learning",
            "date_published": "2021-08-22T08:40:07.000Z",
            "content_html": "<p>\n\n\t<div class=\"row\">\n    <embed src=\"./Grid_cell_and_conceptual_memory_study.pdf\" width=\"100%\" height=\"550\" type=\"application/pdf\">\n\t</div>\n\n\n</p>\n",
            "tags": [
                "Intelligence and Brain Theories",
                "Grid Cell",
                "Conceptual Learning",
                "Memory",
                "fMRI"
            ]
        },
        {
            "id": "https://bifeitang.github.io/2021/08/22/ReinforcementLearning/Defeat-MITM-attack-with-Reinforcement-Learning/",
            "url": "https://bifeitang.github.io/2021/08/22/ReinforcementLearning/Defeat-MITM-attack-with-Reinforcement-Learning/",
            "title": "Defeat MITM attack with Reinforcement Learning",
            "date_published": "2021-08-22T07:59:39.000Z",
            "content_html": "<p>Add another line</p>\n<h2 id=\"report\"><a class=\"anchor\" href=\"#report\">#</a> Report</h2>\n<p>\n\n\t<div class=\"row\">\n    <embed src=\"./RL_final_report.pdf\" width=\"100%\" height=\"550\" type=\"application/pdf\">\n\t</div>\n\n\n</p>\n<h2 id=\"supplementary\"><a class=\"anchor\" href=\"#supplementary\">#</a> Supplementary</h2>\n<p>\n\n\t<div class=\"row\">\n    <embed src=\"./suppmaterial.pdf\" width=\"100%\" height=\"550\" type=\"application/pdf\">\n\t</div>\n\n\n</p>\n",
            "tags": [
                "Reinforcement Learning",
                "Reinforcement Learning"
            ]
        },
        {
            "id": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/StateMachine/",
            "url": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/StateMachine/",
            "title": "",
            "date_published": "2021-08-16T03:19:05.968Z",
            "content_html": "<h2 id=\"freertos-main-controller\"><a class=\"anchor\" href=\"#freertos-main-controller\">#</a> FreeRTOS Main Controller</h2>\n<h3 id=\"design-principles\"><a class=\"anchor\" href=\"#design-principles\">#</a> Design Principles</h3>\n<ul>\n<li>Don't starve the tasks\n<ul>\n<li>Using  <code>vTaskDelay</code>  to block high priority tasks so that the lower priorities ones get chance to execute.</li>\n</ul>\n</li>\n<li>Using global variable is not encouraged in FreeRTOS.  Prefer usage of  <code>static</code>  variable like private in C++.</li>\n<li>Idle Task (keep the counter)</li>\n</ul>\n<h3 id=\"state-machine\"><a class=\"anchor\" href=\"#state-machine\">#</a> State Machine</h3>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token class-name\">state_func_t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token class-name\">uint8_t</span> CUR_STATE_ELAPSED_MS <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token class-name\">state_func_t</span> state_func <span class=\"token operator\">=</span> null<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">StateInit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">StateWalk</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">StateStand</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">StateSit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">StateFreeze</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">StateErr</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Each error with an error code in lookup table, e.g. timeout</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">SetNxtState</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">state_func_t</span> func<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token class-name\">state_func_t</span> <span class=\"token function\">GetNxtState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">StateWalk</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">// 1. set CUR_STATE_ELAPSED_MS by calling xTaskGetTickCount(), check if timeout</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">// 2. send commands, then SetNxtState(StateStand)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\">// 3. or gets interrrupted by emergency, then SetNxtState(StateFreeze)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">SetNxtState</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">state_func_t</span> func<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\">// 1. set CUR_STATE_ELAPSED_MS = 0</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">// 2. state_func = func</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token class-name\">state_func_t</span> <span class=\"token function\">GetNxtState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">return</span> state_func<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">StateMachineTask</span><span class=\"token punctuation\">(</span>xParameter<span class=\"token operator\">*</span> params<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token function\">SetNxtState</span><span class=\"token punctuation\">(</span>StateInit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token function\">GetNxtState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token function\">xTaskDelay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"common-practices\"><a class=\"anchor\" href=\"#common-practices\">#</a> Common Practices</h4>\n<ul>\n<li><strong>Using switch statement</strong><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDY2ODUyOTIvc3RhdGUtbWFjaGluZS1wcm9ncmFtLWRlc2lnbi1pbi1mcmVlcnRvcy12dGFza3N0YXJ0c2NoZWR1bGVyLWluLWEtc3dpdGNoLXN0YXRl\">https://stackoverflow.com/questions/46685292/state-machine-program-design-in-freertos-vtaskstartscheduler-in-a-switch-state</span></li>\n<li>Without using switch statement\n<ul>\n<li>Each function only needs to know two things\n<ul>\n<li>What needs to do in this state</li>\n<li>What is next state</li>\n</ul>\n</li>\n<li>Benefits comparing with  <code>switch</code>\n<ul>\n<li>Separate the state transfer form a centralized to distributed functions</li>\n<li>No matter how complex the state transfer is, each</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"test-bench\"><a class=\"anchor\" href=\"#test-bench\">#</a> Test Bench</h3>\n<ul>\n<li>LabWindows/CVI<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmkuY29tL2VuLXVzL3N1cHBvcnQvZG93bmxvYWRzL3NvZnR3YXJlLXByb2R1Y3RzL2Rvd25sb2FkLmxhYndpbmRvd3MtY3ZpLmh0bWwjMzUzNjAz\">https://www.ni.com/en-us/support/downloads/software-products/download.labwindows-cvi.html#353603</span></li>\n<li></li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/Questions/",
            "url": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/Questions/",
            "title": "",
            "date_published": "2021-08-16T03:19:05.951Z",
            "content_html": "<h2 id=\"enviornment\"><a class=\"anchor\" href=\"#enviornment\">#</a> Enviornment</h2>\n<blockquote>\n<p><strong>Q1</strong>: How fundimentally the two adds-on are different?</p>\n</blockquote>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201214013454316.png\" alt=\"image-20201214013454316\" /></p>\n<ul>\n<li>\n<p>Matlab</p>\n</li>\n<li>\n<p>HalCoGen  <code>v04.07.01</code></p>\n</li>\n<li>\n<p>Code Composer Studio Tool Chain:  <code>C:\\ti\\ccs1011\\ccs\\tools\\compiler\\ti-cgt-arm_5.2.9</code></p>\n</li>\n</ul>\n<blockquote>\n<p><strong>Q2</strong>: How Simulink code gets compiled and linked with tools provided above and then load to the Hercules board?</p>\n</blockquote>\n<h2 id=\"code\"><a class=\"anchor\" href=\"#code\">#</a> Code</h2>\n<blockquote>\n<p><strong>Q3</strong>: Why this  <code>No rule to make target C:/Program, needed by updown.obj</code>  come up every first time open the simulink or switch from CCS to Matlab?</p>\n</blockquote>\n<p><img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201214011201751.png\" alt=\"image-20201214011201751\" /></p>\n<blockquote>\n<p><strong>Q4</strong>: Why the code working in CCS but not in Matlab Simulink? What can cause the problem?</p>\n</blockquote>\n<h3 id=\"code-composer-studio\"><a class=\"anchor\" href=\"#code-composer-studio\">#</a> Code Composer Studio</h3>\n<ul>\n<li>Code</li>\n</ul>\n<p><img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201214014418829.png\" alt=\"image-20201214014418829\" /></p>\n<ul>\n<li>\n<p>Running in CCS<br />\n<img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201214014625695.png\" alt=\"image-20201214014625695\" /></p>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201214014915756.png\" alt=\"image-20201214014915756\" /></p>\n<blockquote>\n<p>I am not using  <code>printf</code>  here sinc I had some issue with configuration of section  <code>.cio</code>  for file  <code>HL_sys_link.cmd</code> , it would  be good if there's any insight.</p>\n</blockquote>\n</li>\n<li>\n<p>Same code running in Simulink</p>\n<ul>\n<li>\n<p>Simulink Model<br />\n<img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201214015247520.png\" alt=\"image-20201214015247520\" /></p>\n</li>\n<li>\n<p>Following is what's inside of the code block</p>\n<figure class=\"highlight matlab\"><figcaption data-lang=\"MATLAB\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token punctuation\">[</span>canID<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> nBytes<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">CANread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>canID <span class=\"token operator\">=</span> <span class=\"token function\">uint32</span><span class=\"token punctuation\">(</span><span class=\"token function\">nan</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token function\">uint8</span><span class=\"token punctuation\">(</span><span class=\"token function\">nan</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>nBytes <span class=\"token operator\">=</span> <span class=\"token function\">uint8</span><span class=\"token punctuation\">(</span><span class=\"token function\">nan</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span>coder<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">,</span><span class=\"token string\">'rtw'</span><span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    coder<span class=\"token punctuation\">.</span><span class=\"token function\">ceval</span><span class=\"token punctuation\">(</span><span class=\"token string\">'HerculesCANRead'</span><span class=\"token punctuation\">,</span>coder<span class=\"token punctuation\">.</span><span class=\"token function\">wref</span><span class=\"token punctuation\">(</span>canID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>coder<span class=\"token punctuation\">.</span><span class=\"token function\">wref</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>coder<span class=\"token punctuation\">.</span><span class=\"token function\">wref</span><span class=\"token punctuation\">(</span>nBytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canID %u'</span><span class=\"token punctuation\">,</span> canID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'nBytes %u'</span><span class=\"token punctuation\">,</span> nBytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">HerculesCANRead</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">uint32_t</span><span class=\"token operator\">*</span> canID<span class=\"token punctuation\">,</span> <span class=\"token class-name\">uint8_t</span><span class=\"token operator\">*</span> data<span class=\"token punctuation\">,</span> <span class=\"token class-name\">uint8_t</span><span class=\"token operator\">*</span> nBytes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">canInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">canIsRxMessageArrived</span><span class=\"token punctuation\">(</span>canREG1<span class=\"token punctuation\">,</span> canMESSAGE_BOX2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">canGetData</span><span class=\"token punctuation\">(</span>canREG1<span class=\"token punctuation\">,</span> canMESSAGE_BOX2<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token operator\">*</span>canID <span class=\"token operator\">=</span> <span class=\"token function\">canGetID</span><span class=\"token punctuation\">(</span>canREG1<span class=\"token punctuation\">,</span> canMESSAGE_BOX2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token operator\">*</span>nBytes <span class=\"token operator\">=</span> canREG1<span class=\"token operator\">-></span>IF2MCTL <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFU</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<p><strong>Note that the CANWrite works with no problem like following.</strong></p>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201214020304346.png\" alt=\"image-20201214020304346\" /></p>\n",
            "tags": []
        },
        {
            "id": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/MainControllerTasks/",
            "url": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/MainControllerTasks/",
            "title": "",
            "date_published": "2021-08-16T03:19:05.937Z",
            "content_html": "<h2 id=\"main-controller-tasks\"><a class=\"anchor\" href=\"#main-controller-tasks\">#</a> Main Controller Tasks</h2>\n<table>\n<thead>\n<tr>\n<th>Tasks</th>\n<th>Function</th>\n<th>Priority</th>\n<th>Progress</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>IdleTask</strong> (State Machine Task)</td>\n<td>Handle the state machine  transition</td>\n<td>0</td>\n<td>20%</td>\n</tr>\n<tr>\n<td><strong>DbgPrintTask</strong></td>\n<td>Write message to SCI so that logging message will be stored / displayed on UI</td>\n<td>1</td>\n<td>60%</td>\n</tr>\n<tr>\n<td><strong>HeartBeatTask</strong></td>\n<td>Ping each node receiver every 1s</td>\n<td>1</td>\n<td>100%</td>\n</tr>\n<tr>\n<td><strong>CANReceiveTask</strong></td>\n<td>Polling commands from CAN receive message box and quickly copy into circular buffer</td>\n<td>2</td>\n<td>100%</td>\n</tr>\n<tr>\n<td><strong>ExoCmdTask</strong></td>\n<td><mark>Provide following APIs</mark>&lt;br /&gt;-  <strong>EnqueueCmd</strong>: state machine can call this function to send a command&lt;br /&gt;-  <strong>IsCmdReceived</strong> &lt;br /&gt;<mark>with following functions</mark>&lt;br /&gt;- Send command&lt;br /&gt;- Resend command if no echo received before timeout &lt;br /&gt;- Pull message from circular buffer see if there's command echo</td>\n<td>2</td>\n<td>40%</td>\n</tr>\n<tr>\n<td><strong>EmergencyStopTask</strong></td>\n<td>Emergency Handling</td>\n<td>4</td>\n<td>0%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"main-controller-ui\"><a class=\"anchor\" href=\"#main-controller-ui\">#</a> Main Controller UI</h2>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2JpZmVpdGFuZy9ibG9nLWltZy1ob3N0aW5nLXlhbmcvbWFzdGVyL2FydGljbGVfaW1ncy9pbWFnZS0yMDIxMDIwODE3NDM1NzUyMy5wbmc=\">https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20210208174357523.png</span>&quot; alt=&quot;image-20210208174357523&quot; style=&quot;zoom:70%;&quot; /&gt;</p>\n<ul>\n<li>Send command to main controller\n<ul>\n<li>More exploration (USB)</li>\n<li>Upload initial configuration to different joint</li>\n</ul>\n</li>\n<li>Listening to COM port\n<ul>\n<li>COM5 e.g.</li>\n<li>save message to computer</li>\n</ul>\n</li>\n<li>State Machine\n<ul>\n<li>Initialization (Power up)\n<ul>\n<li>LED indication on the mode of main controller (Individual test by Lujayna )</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Next Step</p>\n<ul>\n<li>Send joint max/min range at start up</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/June%206th/",
            "url": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/June%206th/",
            "title": "",
            "date_published": "2021-08-16T03:19:05.921Z",
            "content_html": "<h2 id=\"joint-cant-communicate-with-hercules\"><a class=\"anchor\" href=\"#joint-cant-communicate-with-hercules\">#</a> Joint can't communicate with Hercules</h2>\n<ul class=\"task-list\">\n<li>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>CANbus<span class=\"token punctuation\">.</span><span class=\"token function\">available</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      CANbus<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>jointCAN<span class=\"token punctuation\">.</span>frame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Receive CAN request\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      Serial<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>jointCAN<span class=\"token punctuation\">.</span>frame<span class=\"token punctuation\">.</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>The  <code>available()</code>  function suppose to indicate receiving of CAN message, but nothing came up</p>\n</li>\n<li>\n<p>CAN bit timing may not good</p>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbWJlZGNsb2dpYy5jb20vY2FuLXByb3RvY29sLXByb3RvY29sLXRvLWJyb2FkY2FzdC1tZXNzYWdlLW9uLWEtbmV0d29yay9jYW4tYml0LXRpbWluZy1hbmQtY2FsY3VsYXRpb24v\">https://embedclogic.com/can-protocol-protocol-to-broadcast-message-on-a-network/can-bit-timing-and-calculation/</span></p>\n</li>\n<li>\n<p>Original</p>\n<ul>\n<li>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/** - Setup bit timing </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    *     - Setup baud rate prescaler extension</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    *     - Setup TSeg2</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    *     - Setup TSeg1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    *     - Setup sample jump width</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    *     - Setup baud rate prescaler</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    canREG1<span class=\"token operator\">-></span>BTR <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>uint32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>uint32<span class=\"token punctuation\">)</span><span class=\"token number\">0U</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">16U</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                   <span class=\"token punctuation\">(</span>uint32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>uint32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">4U</span> <span class=\"token operator\">-</span> <span class=\"token number\">1U</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">12U</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                   <span class=\"token punctuation\">(</span>uint32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>uint32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">3U</span> <span class=\"token operator\">+</span> <span class=\"token number\">4U</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1U</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">8U</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                   <span class=\"token punctuation\">(</span>uint32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>uint32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">4U</span> <span class=\"token operator\">-</span> <span class=\"token number\">1U</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6U</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                   <span class=\"token punctuation\">(</span>uint32<span class=\"token punctuation\">)</span><span class=\"token number\">24U</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>Confirmed the bit rate is 250kb/s</p>\n<ul>\n<li><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20210606214742664.png\" alt=\"image-20210606214742664\" /></li>\n</ul>\n</li>\n<li>\n<p>Try change the heart beat frequency from 20ms to 2s</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* The 20ms value is converted to ticks using the portTICK_PERIOD_MS constant. */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">mainHEARTBEAT_FREQUENCY_MS</span>         <span class=\"token expression\"><span class=\"token punctuation\">(</span> <span class=\"token number\">2000</span> <span class=\"token operator\">/</span> portTICK_PERIOD_MS <span class=\"token punctuation\">)</span></span></span></pre></td></tr></table></figure></li>\n<li>\n<p>Confirm for Teensy (FlexCAN.cpp)</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">250000</span> <span class=\"token operator\">==</span> baud <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    FLEXCAN0_CTRL1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">FLEXCAN_CTRL_PROPSEG</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token function\">FLEXCAN_CTRL_RJW</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>                      <span class=\"token operator\">|</span> <span class=\"token function\">FLEXCAN_CTRL_PSEG1</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token function\">FLEXCAN_CTRL_PSEG2</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token function\">FLEXCAN_CTRL_PRESDIV</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_0\"> Issue with CAN transceiver? No</label></p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_1\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_1\"> Issue with Baud rate? No</label></p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\" /><label for=\"cbx_2\"> Timing issue? Teensy needs to delay a certain period of time in order to get the corresponding message.</label></p>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/HerculesCanBusCommunication_12-9-2020/",
            "url": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/HerculesCanBusCommunication_12-9-2020/",
            "title": "",
            "date_published": "2021-08-16T03:19:05.913Z",
            "content_html": "<p>According to the instruction <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGkuY29tL2xpdC9hbi9zcG5hMjM3L3NwbmEyMzcucGRmP3RzPTE2MDc0OTcwODA2NzImYW1wO3JlZl91cmw9aHR0cHMlMjUzQSUyNTJGJTI1MkZ3d3cuZ29vZ2xlLmNvbSUyNTJG\">https://www.ti.com/lit/an/spna237/spna237.pdf?ts=1607497080672&amp;ref_url=https%3A%2F%2Fwww.google.com%2F</span></p>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201209010536090.png\" alt=\"image-20201209010536090\" /></p>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201209010625937.png\" alt=\"image-20201209010625937\" /></p>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201209011013043.png\" alt=\"image-20201209011013043\" /></p>\n<table>\n<thead>\n<tr>\n<th>msgBoxArbitVal</th>\n<th>Representation</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Bit 31</td>\n<td>Not used</td>\n</tr>\n<tr>\n<td>Bit 30</td>\n<td>0 - The 11-bit (&quot;standard&quot;) identifier is used for this message object.&lt;br/&gt;1 - The 29-bit (&quot;extended&quot;) identifier is used for this message object.</td>\n</tr>\n<tr>\n<td>Bit 29</td>\n<td>0 - Direction = Receive&lt;br /&gt;1 - Direction = Transmit</td>\n</tr>\n<tr>\n<td>Bit 28:0</td>\n<td>Message ID</td>\n</tr>\n</tbody>\n</table>\n<p>E.g.</p>\n<ul class=\"task-list\">\n<li>\n<p>ID = 123, Direction = transmit, + 1 &gt;&gt; 29, 0 &gt;&gt;</p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\" /><label for=\"cbx_0\"> Write a function to convert the ID to the msgArbitVal</label></p>\n</li>\n</ul>\n<pre><code class=\"language-C\">#include &quot;HL_can.h&quot;\n#include &quot;HL_system.h&quot;\n\n#include &quot;HL_sys_common.h&quot;\n\n#define D_SIZE 12\n\nuint32 getMsgBoxArbitVal(uint32 msgID, bool isTransmit, bool isExtended);\n\nuint8 tx_data[D_SIZE] = &#123;1, 1, 2, 0, 2, 0, 2, 0, 'E', 'X', 'O', '\\0'&#125;;\n\n\nint main(void)\n&#123;\n    canInit();\n    uint32 newMsgBoxVal = getMsgBoxArbitVal(128, 1, 1);\n    canUpdateID(canREG1, canMESSAGE_BOX1, newMsgBoxVal);\n    canTransmit(canREG1, canMESSAGE_BOX1, tx_data);\n\n    return 0;\n&#125;\n\nuint32 getMsgBoxArbitVal(uint32 msgID, bool isTransmit, bool isExtended)\n&#123;\n    uint32 direction = isTransmit ? (1 &lt;&lt; 29) : 0;\n    uint32 extended = isExtended ? (1 &lt;&lt; 30) : 0;\n    return (uint32) msgID | direction | extended;\n&#125;\n\n\nvoid canMessageNotification(canBASE_t *node, uint32 messageBox)\n&#123;\n    return;\n&#125;\n\nvoid canErrorNotification(canBASE_t *node, uint32 notification)\n&#123;\n    return;\n&#125;\n\nvoid canStatusChangeNotification(canBASE_t *node, uint32 notification)\n&#123;\n    return;\n&#125;\n\n</code></pre>\n",
            "tags": []
        },
        {
            "id": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_May_9th_2021/",
            "url": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_May_9th_2021/",
            "title": "",
            "date_published": "2021-08-16T03:19:05.902Z",
            "content_html": "<h2 id=\"may-9th\"><a class=\"anchor\" href=\"#may-9th\">#</a> May 9th</h2>\n<h4 id=\"cant-compile-exojoint\"><a class=\"anchor\" href=\"#cant-compile-exojoint\">#</a> Can't compile  <code>exoJoint</code></h4>\n<ul>\n<li>\n<p>Can't find  <code>sourceID</code>  and  <code>targetID</code> <img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20210509183446878.png\" alt=\"image-20210509183446878\" /></p>\n<ul>\n<li>​\t<strong>Solution</strong>\n<ul>\n<li>Added to  <code>ExoCAN</code>  class<br />\n<img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20210509183558145.png\" alt=\"image-20210509183558145\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Can't find  <code>encodeMsgID</code> <br />\n<img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20210509183756498.png\" alt=\"image-20210509183756498\" /></p>\n<ul>\n<li>Solution: comment that line out</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"cant-run-pyqt-ui-linuxwindowsmac\"><a class=\"anchor\" href=\"#cant-run-pyqt-ui-linuxwindowsmac\">#</a> Can't run PyQt (UI, Linux/Windows/Mac)</h4>\n<ul>\n<li><code>canGUI</code>  folder does not contain any file which import  <code>PyQt4</code>\n<ul>\n<li>Send command to main controller\n<ul>\n<li>API exposed to PyQt UI to accept any outside command</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"able-to-get-angle-recording\"><a class=\"anchor\" href=\"#able-to-get-angle-recording\">#</a> Able to get angle recording</h2>\n<ul>\n<li>\n<p>Teensy</p>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/AngleRecord.gif\" alt=\"AngleRecord\" /></p>\n</li>\n<li>\n<p>Try write to CAN bus with error, stops at waiting for CAN msg request<br />\n<img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20210509234646787.png\" alt=\"image-20210509234646787\" /></p>\n</li>\n<li>\n<p>Send angle information via CAN bus</p>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/AngleCANRecorder.gif\" alt=\"AngleCANRecorder\" /></p>\n</li>\n<li>\n<p>Hercules basic test with value receiver</p>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/AngleMainControllerCommunication.gif\" alt=\"AngleMainControllerCommunication\" /></p>\n</li>\n<li>\n<p>Uplink works: teensy -&gt; main controller (Task)</p>\n</li>\n<li>\n<p>Teensy</p>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_12-5-2020/",
            "url": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_12-5-2020/",
            "title": "",
            "date_published": "2021-08-16T03:19:05.894Z",
            "content_html": "<h4 id=\"to-figure-out\"><a class=\"anchor\" href=\"#to-figure-out\">#</a> To figure out</h4>\n<ul class=\"task-list\">\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_0\"> Why it doesn't work previously</label></p>\n<ul>\n<li>Only Digital Read and write through pin GIOB_4 and GIOB_6 is supported<img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201205162257701.png\" alt=\"image-20201205162257701\" /></li>\n<li>For CAN communication, it's not enough<br />\n<img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201205162523032.png\" alt=\"image-20201205162523032\" /></li>\n<li><mark>Wonder how to generate similar block for CAN bus</mark></li>\n</ul>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_1\" disabled=\"true\" /><label for=\"cbx_1\"> How builder/launcher/etc methods work</label></p>\n<p>USB -&gt; Emulation &amp; Serial port for communication with Simulink<br />\nBuilder using builder, specify the toolchain</p>\n<ul>\n<li>Connectivity configuration</li>\n</ul>\n<p>In order to make the Simulink communicate with target, need to read/write with rtiostream.</p>\n</li>\n</ul>\n<h3 id=\"pre-requisite\"><a class=\"anchor\" href=\"#pre-requisite\">#</a> Pre-Requisite</h3>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\" /><label for=\"cbx_2\"> Cortex-R4F MCUs<br />\n<img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201205150154490.png\" alt=\"image-20201205150154490\" /></label></li>\n</ul>\n<h2 id=\"changes\"><a class=\"anchor\" href=\"#changes\">#</a> Changes</h2>\n<h3 id=\"builder\"><a class=\"anchor\" href=\"#builder\">#</a> Builder</h3>\n<h4 id=\"compare-ti_hercules_rm57lx_toolchainm-and-herculescandebugmakefile-makefile-first-part-of-the-builder\"><a class=\"anchor\" href=\"#compare-ti_hercules_rm57lx_toolchainm-and-herculescandebugmakefile-makefile-first-part-of-the-builder\">#</a> Compare  <code>TI_HERCULES_RM57Lx_toolchain.m</code>  and  <code>HerculesCan\\Debug\\makefile</code>  ( <code>makefile</code> , first part of the builder)</h4>\n<ul class=\"task-list\">\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_3\" disabled=\"true\" /><label for=\"cbx_3\"> Linker</label></p>\n<figure class=\"highlight makefile\"><figcaption data-lang=\"makefile\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Makefile</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token symbol\">HerculusCan.out</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>OBJS<span class=\"token punctuation\">)</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>CMD_SRCS<span class=\"token punctuation\">)</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>GEN_CMDS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token operator\">@</span>echo <span class=\"token string\">'Building target: \"$@\"'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token operator\">@</span>echo <span class=\"token string\">'Invoking: ARM Linker'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token string\">\"C:/ti/ccs1011/ccs/tools/compiler/ti-cgt-arm_20.2.1.LTS/bin/armcl\"</span> -mv7R5 --code_state<span class=\"token operator\">=</span>32 --float_support<span class=\"token operator\">=</span>VFPv3D16 -me -g --diag_warning<span class=\"token operator\">=</span>225 --diag_wrap<span class=\"token operator\">=</span>off --display_error_number --enum_type<span class=\"token operator\">=</span>packed --abi<span class=\"token operator\">=</span>eabi -z -m<span class=\"token string\">\"HerculusCan.map\"</span> --heap_size<span class=\"token operator\">=</span>0x800 --stack_size<span class=\"token operator\">=</span>0x800 -i<span class=\"token string\">\"C:/ti/ccs1011/ccs/tools/compiler/ti-cgt-arm_20.2.1.LTS/lib\"</span> -i<span class=\"token string\">\"C:/ti/ccs1011/ccs/tools/compiler/ti-cgt-arm_20.2.1.LTS/include\"</span> --reread_libs --diag_wrap<span class=\"token operator\">=</span>off --display_error_number --warn_sections --xml_link_info<span class=\"token operator\">=</span><span class=\"token string\">\"HerculusCan_linkInfo.xml\"</span> --rom_model -o <span class=\"token string\">\"HerculusCan.out\"</span> <span class=\"token variable\">$</span><span class=\"token punctuation\">(</span>ORDERED_OBJS<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token operator\">@</span>echo <span class=\"token string\">'Finished building target: \"$@\"'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token operator\">@</span>echo <span class=\"token string\">' '</span></pre></td></tr></table></figure><figure class=\"highlight matlab\"><figcaption data-lang=\"MATLAB\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>linkerOpts <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token string\">'-z '</span> <span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token string\">'-m\"TI_HerculesPilSerial.map\" '</span> <span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token string\">'-i\"$(TI_LIB)\" '</span> <span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token string\">'-i\"$(TI_INCLUDE)\" '</span> <span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token string\">'--reread_libs '</span> <span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token string\">'--warn_sections '</span> <span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token string\">'--display_error_number '</span> <span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token string\">'--diag_wrap=off '</span> <span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token string\">'--rom_model '</span> <span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token string\">'--stack=0 '</span> <span class=\"token punctuation\">...</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token string\">'\"$(TARGET_SOURCE)\\halcogen\\source\\sys_link.cmd\"'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_4\">  <code>-mv7R4</code>  to  <code>-mv7R5</code> </label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_5\" disabled=\"true\" /><label for=\"cbx_5\">  <code>ProjectName.map</code>  change the project name</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_6\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_6\">  <code>linker.Libraries = &#123; '&quot;$(TI_LIB)\\rtsv7R4_T_le_v3D16_eabi.lib&quot;' &#125;;</code> , confirmed the .lib exists in the  <code>ti-cgt-arm-20.2.1.LTS/lib</code> .</label></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"change-targetapplicationframework-second-part-of-the-builder\"><a class=\"anchor\" href=\"#change-targetapplicationframework-second-part-of-the-builder\">#</a> Change  <code>TargetApplicationFramework</code>  (second part of the builder)</h4>\n<p>Main thing is adding HalCoGen sources  <code>addHalCoGenSources</code>  and  <code>addRTIOStreamSources</code> . The  <code>TargetApplicationFramework</code>  provides code to initialize the target before running the main function. It provides code like set the clock frequency, wait states, interrupts, etc. Also, set up the C runtime environment, which HalCoGen will generate.</p>\n<ul class=\"task-list\">\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_7\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_7\"> Replace files and folders under  <code>halcogen</code>  with the latest configuration generated from HalCoGen, make sure the SCI2 is configured. Following is the reason for using SCI2.</label></p>\n<blockquote>\n<p>Before the board is shipped, the XDS100V2 port1 is configured as JTAG, and port2 is configured as SCI. The CPLD on the board is also programmed to route the JTAG signals to the MCU.</p>\n</blockquote>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_8\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_8\"> Update project main function to include correct header. e.g.  <code>gio.h</code>  to  <code>HL_gio.h</code> </label></p>\n</li>\n</ul>\n<h3 id=\"launcher\"><a class=\"anchor\" href=\"#launcher\">#</a> Launcher</h3>\n<p>Look at  <code>Launcher.m</code> , it uses  <code>loadti</code>  which comes with Code Composer as a debug server scripting.</p>\n<ul class=\"task-list\">\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_9\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_9\"> Change  <code>tconf</code> , make it point to new  <code>RM57L8xx.ccxml</code> . This file can be got from Code Composer  <code>targetConfigs</code> .<br />\n<img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201205232557405.png\" alt=\"image-20201205232557405\" /></label></p>\n<p>One can test the usability of this file by launch and try connect the the target.</p>\n</li>\n</ul>\n<h3 id=\"communicator\"><a class=\"anchor\" href=\"#communicator\">#</a> Communicator</h3>\n<p>Mathworks provide  <code>libmwrtiostreamserial.dll</code>  on host side. On the target side, it got the  <code>RTIOStream</code>  implemented in the sources folder.</p>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_10\" disabled=\"true\" /><label for=\"cbx_10\"> Platform-in-the-loop, Matlab generate binary file =&gt; USB to the board.<br />\nBinary file, stl, open command and run the bin file</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_11\" disabled=\"true\" /><label for=\"cbx_11\"> Embedded version, digital write and read</label></li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_11-30-2020/",
            "url": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_11-30-2020/",
            "title": "",
            "date_published": "2021-08-16T03:19:05.888Z",
            "content_html": "<h2 id=\"can-communication-between-teensy-and-hercules\"><a class=\"anchor\" href=\"#can-communication-between-teensy-and-hercules\">#</a> CAN communication between Teensy and Hercules</h2>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb3BwZXJoaWxsdGVjaC5jb20vYmxvZy9jb250cm9sbGVyLWFyZWEtbmV0d29yay1jYW4tcHJvdG90eXBpbmctd2l0aC10ZWVuc3ktMzEzMi8=\">CAN Prototyping with Teensy 3.1/3.2</span></p>\n<ul>\n<li>In case of working with the CAN port, you will need a CAN transceiver in order to connect the board to a real CAN bus network. The best choice for adding a CAN transceiver, in terms of size and electrical compatibility, is the <span class=\"exturl\" data-url=\"aHR0cDovL2NvcHBlcmhpbGx0ZWNoLmNvbS9jYW4tYnVzLW1pbmktYnJlYWtvdXQtYm9hcmQv\">CAN Bus Mini Breakout Board</span> we offer through this website.</li>\n<li><img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201114174628529.png\" alt=\"image-20201114174628529\" /></li>\n<li><img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201114174729789.png\" alt=\"image-20201114174729789\" /></li>\n</ul>\n</li>\n<li>\n<p>Teensy:</p>\n</li>\n<li>\n<p>Able to read data from Teensy Can bus</p>\n<ul>\n<li>\n<p><img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201114182837644.png\" alt=\"image-20201114182837644\" /></p>\n</li>\n<li>\n<p><img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201114183009690.png\" alt=\"image-20201114183009690\" /></p>\n</li>\n<li>\n<p><img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201114184659352.png\" alt=\"image-20201114184659352\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>Connect Hercules to the CAN bus</p>\n<ul>\n<li>\n<p>Install <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGkuY29tL3Rvb2wvSEFMQ09HRU4=\">HalCoGen</span></p>\n</li>\n<li>\n<p>Install Code Composer Studio</p>\n</li>\n<li>\n<p><img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201115005749530.png\" alt=\"image-20201115005749530\" /></p>\n</li>\n<li>\n<p>Configure DCAN_TX, DCAN_RX</p>\n<p><img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201115233805328.png\" alt=\"image-20201115233805328\" /></p>\n</li>\n<li>\n<p>Follow the tutorial and write code</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Figure out the DCAN1 Pin</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGkuY29tL2xpdC9kZi9zcHJyMzk3L3NwcnIzOTcucGRmP3RzPTE2MDU0OTYyNzEwODc=\">https://www.ti.com/lit/df/sprr397/sprr397.pdf?ts=1605496271087</span></li>\n<li><img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201115234025988.png\" alt=\"image-20201115234025988\" />\n<ul>\n<li>I was thinking maybe the pin is multiplexed to here</li>\n<li>But wasn't able to find corresponding CAN1</li>\n</ul>\n</li>\n<li>So looks like J10 44/45 are the pin I should use. And I have solder pin connecter to it.<br />\n<img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201115235233243.png\" alt=\"image-20201115235233243\" /></li>\n</ul>\n</li>\n<li>\n<p>Set up CAN TX</p>\n<ul>\n<li>\n<p>Code Modified in  <code>HL_sys_man.c</code></p>\n</li>\n<li>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* USER CODE BEGIN (0) */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"HL_can.h\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"HL_system.h\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/* USER CODE END */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">/* Include Files */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"HL_sys_common.h\"</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">/* USER CODE BEGIN (1) */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">/* USER CODE END */</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">/** @fn void main(void)</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>*   @brief Application main function</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>*   @note This function is empty by default.</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>*</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>*   This function is called after startup.</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>*   The user can use this function to implement the application.</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">/* USER CODE BEGIN (2) */</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"HL_can.h\"</span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"HL_system.h\"</span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>uint8 tx_data<span class=\"token punctuation\">[</span>D_SIZE<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'E'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'X'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'O'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\0'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>uint32 <span class=\"token function\">checkPackets</span><span class=\"token punctuation\">(</span>uint8 <span class=\"token operator\">*</span>src_pkg<span class=\"token punctuation\">,</span> uint8 <span class=\"token operator\">*</span>dst_pkg<span class=\"token punctuation\">,</span> uint32 psize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">/* USER CODE END */</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">/* USER CODE BEGIN (3) */</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token function\">canInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token function\">canTransmit</span><span class=\"token punctuation\">(</span>canREG1<span class=\"token punctuation\">,</span> canMESSAGE_BOX1<span class=\"token punctuation\">,</span> tx_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\">/* USER CODE END */</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\">/* USER CODE BEGIN (4) */</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>uint32 <span class=\"token function\">checkPackages</span><span class=\"token punctuation\">(</span>uint8 <span class=\"token operator\">*</span>src_pkg<span class=\"token punctuation\">,</span> uint8 <span class=\"token operator\">*</span>dst_pkg<span class=\"token punctuation\">,</span> uint32 psize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    uint32 err <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    uint32 cnt <span class=\"token operator\">=</span> psize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>cnt<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src_pkg<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>dst_pkg<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            err<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">return</span> err<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">canMessageNotification</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">canBASE_t</span> <span class=\"token operator\">*</span>node<span class=\"token punctuation\">,</span> uint32 messageBox<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">canErrorNotification</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">canBASE_t</span> <span class=\"token operator\">*</span>node<span class=\"token punctuation\">,</span> uint32 notification<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">canStatusChangeNotification</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">canBASE_t</span> <span class=\"token operator\">*</span>node<span class=\"token punctuation\">,</span> uint32 notification<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token comment\">/* USER CODE END */</span></pre></td></tr></table></figure></li>\n</ul>\n<pre><code>  \n- ![image-20201120224019913](C:\\Users\\kydn8\\AppData\\Roaming\\Typora\\typora-user-images\\image-20201120224019913.png)\n\n- ![image-20201120224129579](C:\\Users\\kydn8\\AppData\\Roaming\\Typora\\typora-user-images\\image-20201120224129579.png)\n\n- ![image-20201120224157852](C:\\Users\\kydn8\\AppData\\Roaming\\Typora\\typora-user-images\\image-20201120224157852.png)\n\n</code></pre>\n</li>\n<li>\n<p>Set up CAN RX</p>\n<ul>\n<li>\n<p><img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201120234019661.png\" alt=\"image-20201120234019661\" /></p>\n</li>\n<li>\n<p><img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201120234038976.png\" alt=\"image-20201120234038976\" /></p>\n</li>\n<li>\n<p>Code</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">canIsRxMessageArrived</span><span class=\"token punctuation\">(</span>canREG1<span class=\"token punctuation\">,</span> canMESSAGE_BOX2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">canGetData</span><span class=\"token punctuation\">(</span>canREG1<span class=\"token punctuation\">,</span> canMESSAGE_BOX2<span class=\"token punctuation\">,</span> rx_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sciSend</span><span class=\"token punctuation\">(</span>sciREG1<span class=\"token punctuation\">,</span> D_SIZE<span class=\"token punctuation\">,</span> rx_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>uint32 i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> D_SIZE<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pos[%u] received data [%u]\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> rx_data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>Both</p>\n<pre><code class=\"language-C\">int main(void)\n&#123;\n    canInit();\n    sciInit();\n\n    while(1)\n    &#123;\n        tx_data[0]++;\n        canTransmit(canREG1, canMESSAGE_BOX1, tx_data);\n\n        while(!canIsRxMessageArrived(canREG1, canMESSAGE_BOX2));\n        canGetData(canREG1, canMESSAGE_BOX2, rx_data);\n\n        sciSend(sciREG1, D_SIZE, rx_data);\n        uint32 i;\n\n        for(i = 0; i &lt; D_SIZE; ++i)\n        &#123;\n            printf(&quot;Pos[%u] received data [%u]\\n&quot;, i, rx_data[i]);\n        &#125;\n    &#125;\n\n    return 0;\n&#125;\n</code></pre>\n<p><img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201120234921668.png\" alt=\"image-20201120234921668\" /></p>\n</li>\n<li>\n<p>Set up the test coverage and add a unit test badge</p>\n</li>\n<li>\n<p>Next Steps</p>\n<ul>\n<li>Communicate</li>\n<li>State machine for joints</li>\n<li>Matlab Simulink real-times\n<ul>\n<li>Receive and send out the message</li>\n<li>Focus on the can receive</li>\n<li>CAN_Not_available</li>\n</ul>\n</li>\n<li><img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201121111506761.png\" alt=\"image-20201121111506761\" /></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"use-matlab-simulink-with-hercules-rm57x\"><a class=\"anchor\" href=\"#use-matlab-simulink-with-hercules-rm57x\">#</a> Use MATLAB Simulink with Hercules RM57x</h2>\n<h3 id=\"set-up\"><a class=\"anchor\" href=\"#set-up\">#</a> Set Up</h3>\n<ul>\n<li>\n<p><strong>Pre-requisite</strong></p>\n<ul>\n<li></li>\n</ul>\n</li>\n<li>\n<p>Install Cortex-R adds-on<br />\n<img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128150811124.png\" alt=\"image-20201128150811124\" /></p>\n<ul>\n<li>\n<p>The package toolchain may be outdated, the latest code composer version is v10, but only v5 and v6 are present.<br />\n<img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128151129927.png\" alt=\"image-20201128151129927\" /></p>\n</li>\n<li>\n<p>Make sure the version matches<br />\n<img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128151213973.png\" alt=\"image-20201128151213973\" /></p>\n</li>\n<li>\n<p>Looks like ccsv6 has different file structure comparing with ccsv10. So installed ccsv6.</p>\n<p><img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128152234251.png\" alt=\"image-20201128152234251\" /><br />\n<img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128161503273.png\" alt=\"image-20201128161503273\" /></p>\n<p>This works<img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128161532729.png\" alt=\"image-20201128161532729\" /><br />\n<img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128161816355.png\" alt=\"image-20201128161816355\" /><br />\n<img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128161825513.png\" alt=\"image-20201128161825513\" /></p>\n<p><img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128161857315.png\" alt=\"image-20201128161857315\" /><br />\n<img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128161914373.png\" alt=\"image-20201128161914373\" /></p>\n</li>\n<li></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"run-demo-code\"><a class=\"anchor\" href=\"#run-demo-code\">#</a> Run Demo Code</h3>\n<ul>\n<li>Remember to switch the directory</li>\n</ul>\n<p>&lt;img src=&quot;C:\\Users\\kydn8\\AppData\\Roaming\\Typora\\typora-user-images\\image-20201128174747736.png&quot; alt=&quot;image-20201128174747736&quot; style=&quot;zoom:100%;&quot; /&gt;</p>\n<ul>\n<li>\n<p>Change the directory from <em><strong>C:\\Program Files\\Polyspace\\R2020a\\bin</strong></em> to your own drive<br />\n<img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128175033477.png\" alt=\"image-20201128175033477\" /></p>\n</li>\n<li>\n<p>Second bug is I used  <code>&amp;</code>  in my folder name which confused the compiler.</p>\n</li>\n<li>\n<p>Eventually I am able to deploy and build<br />\n<img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128183655265.png\" alt=\"image-20201128183655265\" /></p>\n<p>But there's no command window pop up as stated in the example</p>\n<blockquote>\n<p>After the model launches on the hardware, a command window opens and shows that the executable is running on in the TI Hercules RM57Lx LaunchPad Development Kit. To stop the model running on the TI Hercules RM57Lx LaunchPad Development Kit, close the command window.</p>\n</blockquote>\n<p>I suspect it's due to the warning</p>\n<blockquote>\n<p>All blocks in block diagram '<span class=\"exturl\" data-url=\"bWF0bGFiOm9wZW5fc3lzdGVt\">arm_cortex_r_gettingstarted</span>' are either virtual or have been removed by block reduction optimization or they are inactive variants, therefore there is nothing to simulate. Note, for code generation, block reduction optimization removes all diagram branches terminating in sink blocks that do not participate in code generation. For example, To Workspace blocks and potentially their sources are removed when the <span class=\"exturl\" data-url=\"bWF0bGFiOmNvbmZpZ3NldC5pbnRlcm5hbC5vcGVuKCdhcm1fY29ydGV4X3JfZ2V0dGluZ3N0YXJ0ZWQnLCdNYXRGaWxlTG9nZ2luZycpOw==\">MAT-file logging</span> is off.</p>\n<p>Component:Simulink | Category:Block diagram warning</p>\n</blockquote>\n<ul>\n<li><strong>Can't connect to hardware board</strong><br />\n<img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201129140320119.png\" alt=\"image-20201129140320119\" />\n<ul>\n<li>Followed the question here <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWF0aHdvcmtzLmNvbS9tYXRsYWJjZW50cmFsL2Fuc3dlcnMvNjIyMzczLWVtYmVkZGVkLWNvZGVyLWZvci1hcm0tY29ydGV4LXItcHJvY2Vzc29ycy1oZXJjdWxlcy10bXM1NzBsYzQzeA==\">https://www.mathworks.com/matlabcentral/answers/622373-embedded-coder-for-arm-cortex-r-processors-hercules-tms570lc43x</span></li>\n</ul>\n</li>\n<li></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"check-list\"><a class=\"anchor\" href=\"#check-list\">#</a> Check List</h2>\n<ul class=\"task-list\">\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\" /><label for=\"cbx_0\"> Be able to compile and upload code to the Teensy</label></p>\n<ul>\n<li>Clean, blink LED test</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYW5nb3V0cy5nb29nbGUuY29tL18vZWxVaS9jaGF0LXJlZGlyZWN0P2F1dGh1c2VyPTEmYW1wO2Rlc3Q9aHR0cHMlM0ElMkYlMkZ3d3cuYXJkdWluby5jYyUyRmVuJTJGVHV0b3JpYWwlMkZCdWlsdEluRXhhbXBsZXMlMkZCbGluaw==\">https://www.arduino.cc/en/Tutorial/BuiltInExamples/Blink</span></li>\n<li>#define LED 13</li>\n</ul>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_1\" disabled=\"true\" /><label for=\"cbx_1\"> Luu will send the CAN send/receive code</label></p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\" /><label for=\"cbx_2\"> CAN Analyzer, microchip</label></p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_3\" disabled=\"true\" /><label for=\"cbx_3\"> After the communication between Tessny-&gt; Hercules Data</label></p>\n<ul>\n<li>\n<p>Logging</p>\n</li>\n<li>\n<p>Timestamp, sampling rate, every signgle frame</p>\n</li>\n<li>\n<p>Will log the data into as Restful API call, Json format</p>\n<ul>\n<li>200 Hz, every frame, log into the Json file 0.005</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_11-15-2020/",
            "url": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_11-15-2020/",
            "title": "",
            "date_published": "2021-08-16T03:19:05.869Z",
            "content_html": "<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\" /><label for=\"cbx_0\"> Ask about UH software</label></li>\n</ul>\n<h2 id=\"can-communication-between-teensy-and-hercules\"><a class=\"anchor\" href=\"#can-communication-between-teensy-and-hercules\">#</a> CAN communication between Teensy and Hercules</h2>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb3BwZXJoaWxsdGVjaC5jb20vYmxvZy9jb250cm9sbGVyLWFyZWEtbmV0d29yay1jYW4tcHJvdG90eXBpbmctd2l0aC10ZWVuc3ktMzEzMi8=\">CAN Prototyping with Teensy 3.1/3.2</span></p>\n<ul>\n<li>In case of working with the CAN port, you will need a CAN transceiver in order to connect the board to a real CAN bus network. The best choice for adding a CAN transceiver, in terms of size and electrical compatibility, is the <span class=\"exturl\" data-url=\"aHR0cDovL2NvcHBlcmhpbGx0ZWNoLmNvbS9jYW4tYnVzLW1pbmktYnJlYWtvdXQtYm9hcmQv\">CAN Bus Mini Breakout Board</span> we offer through this website.</li>\n<li><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201114174628529.png\" alt=\"image-20201114174628529\" /></li>\n<li><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201114174729789.png\" alt=\"image-20201114174729789\" /></li>\n</ul>\n</li>\n<li>\n<p>Teensy:</p>\n</li>\n<li>\n<p>Able to read data from Teensy Can bus</p>\n<ul>\n<li>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201114182837644.png\" alt=\"image-20201114182837644\" /></p>\n</li>\n<li>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201114183009690.png\" alt=\"image-20201114183009690\" /></p>\n</li>\n<li>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201114184659352.png\" alt=\"image-20201114184659352\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>Connect Hercules to the CAN bus</p>\n<ul>\n<li>\n<p>Install <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGkuY29tL3Rvb2wvSEFMQ09HRU4=\">HalCoGen</span></p>\n</li>\n<li>\n<p>Install Code Composer Studio</p>\n</li>\n<li>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201115005749530.png\" alt=\"image-20201115005749530\" /></p>\n</li>\n<li>\n<p>Configure DCAN_TX, DCAN_RX</p>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201115233805328.png\" alt=\"image-20201115233805328\" /></p>\n</li>\n<li>\n<p>Follow the tutorial and write code</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Figure out the DCAN1 Pin</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGkuY29tL2xpdC9kZi9zcHJyMzk3L3NwcnIzOTcucGRmP3RzPTE2MDU0OTYyNzEwODc=\">https://www.ti.com/lit/df/sprr397/sprr397.pdf?ts=1605496271087</span></li>\n<li><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201115234025988.png\" alt=\"image-20201115234025988\" />\n<ul>\n<li>I was thinking maybe the pin is multiplexed to here</li>\n<li>But wasn't able to find corresponding CAN1</li>\n</ul>\n</li>\n<li>So looks like J10 44/45 are the pin I should use. And I have solder pin connecter to it.<br />\n<img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201115235233243.png\" alt=\"image-20201115235233243\" /></li>\n</ul>\n</li>\n<li>\n<p>Set up CAN TX</p>\n<ul>\n<li>\n<p>Code Modified in  <code>HL_sys_man.c</code></p>\n</li>\n<li>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* USER CODE BEGIN (0) */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"HL_can.h\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"HL_system.h\"</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/* USER CODE END */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">/* Include Files */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"HL_sys_common.h\"</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">/* USER CODE BEGIN (1) */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">/* USER CODE END */</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">/** @fn void main(void)</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>*   @brief Application main function</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>*   @note This function is empty by default.</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>*</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>*   This function is called after startup.</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>*   The user can use this function to implement the application.</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">/* USER CODE BEGIN (2) */</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">D_SIZE</span> <span class=\"token expression\"><span class=\"token number\">12</span></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>uint8 tx_data<span class=\"token punctuation\">[</span>D_SIZE<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'E'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'X'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'O'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\0'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>uint32 <span class=\"token function\">checkPackets</span><span class=\"token punctuation\">(</span>uint8 <span class=\"token operator\">*</span>src_pkg<span class=\"token punctuation\">,</span> uint8 <span class=\"token operator\">*</span>dst_pkg<span class=\"token punctuation\">,</span> uint32 psize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">/* USER CODE END */</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">/* USER CODE BEGIN (3) */</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token function\">canInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token function\">canTransmit</span><span class=\"token punctuation\">(</span>canREG1<span class=\"token punctuation\">,</span> canMESSAGE_BOX1<span class=\"token punctuation\">,</span> tx_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">/* USER CODE END */</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\">/* USER CODE BEGIN (4) */</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>uint32 <span class=\"token function\">checkPackages</span><span class=\"token punctuation\">(</span>uint8 <span class=\"token operator\">*</span>src_pkg<span class=\"token punctuation\">,</span> uint8 <span class=\"token operator\">*</span>dst_pkg<span class=\"token punctuation\">,</span> uint32 psize<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    uint32 err <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    uint32 cnt <span class=\"token operator\">=</span> psize<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>cnt<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>src_pkg<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>dst_pkg<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            err<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">return</span> err<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">canMessageNotification</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">canBASE_t</span> <span class=\"token operator\">*</span>node<span class=\"token punctuation\">,</span> uint32 messageBox<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">canErrorNotification</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">canBASE_t</span> <span class=\"token operator\">*</span>node<span class=\"token punctuation\">,</span> uint32 notification<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">canStatusChangeNotification</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">canBASE_t</span> <span class=\"token operator\">*</span>node<span class=\"token punctuation\">,</span> uint32 notification<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token comment\">/* USER CODE END */</span></pre></td></tr></table></figure></li>\n<li>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201120224019913.png\" alt=\"image-20201120224019913\" /></p>\n</li>\n<li>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201120224129579.png\" alt=\"image-20201120224129579\" /></p>\n</li>\n<li>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201120224157852.png\" alt=\"image-20201120224157852\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>Set up CAN RX</p>\n<ul>\n<li>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201120234019661.png\" alt=\"image-20201120234019661\" /></p>\n</li>\n<li>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201120234038976.png\" alt=\"image-20201120234038976\" /></p>\n</li>\n<li>\n<p>Code</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">canIsRxMessageArrived</span><span class=\"token punctuation\">(</span>canREG1<span class=\"token punctuation\">,</span> canMESSAGE_BOX2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">canGetData</span><span class=\"token punctuation\">(</span>canREG1<span class=\"token punctuation\">,</span> canMESSAGE_BOX2<span class=\"token punctuation\">,</span> rx_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sciSend</span><span class=\"token punctuation\">(</span>sciREG1<span class=\"token punctuation\">,</span> D_SIZE<span class=\"token punctuation\">,</span> rx_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>uint32 i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> D_SIZE<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Pos[%u] received data [%u]\\n\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> rx_data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>\n<p>Both</p>\n<pre><code class=\"language-C\">int main(void)\n&#123;\n    canInit();\n    sciInit();\n\n    while(1)\n    &#123;\n        tx_data[0]++;\n        canTransmit(canREG1, canMESSAGE_BOX1, tx_data);\n\n        while(!canIsRxMessageArrived(canREG1, canMESSAGE_BOX2));\n        canGetData(canREG1, canMESSAGE_BOX2, rx_data);\n\n        sciSend(sciREG1, D_SIZE, rx_data);\n        uint32 i;\n\n        for(i = 0; i &lt; D_SIZE; ++i)\n        &#123;\n            printf(&quot;Pos[%u] received data [%u]\\n&quot;, i, rx_data[i]);\n        &#125;\n    &#125;\n\n    return 0;\n&#125;\n</code></pre>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201120234921668.png\" alt=\"image-20201120234921668\" /></p>\n</li>\n<li>\n<p>Set up the test coverage and add a unit test badge</p>\n</li>\n<li>\n<p>Next Steps</p>\n<ul>\n<li>Communicate</li>\n<li>State machine for joints</li>\n<li>Matlab Simulink real-times\n<ul>\n<li>Receive and send out the message</li>\n<li>Focus on the can receive</li>\n<li>CAN_Not_available</li>\n</ul>\n</li>\n<li><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201121111506761.png\" alt=\"image-20201121111506761\" /></li>\n</ul>\n</li>\n<li></li>\n</ul>\n<h2 id=\"use-matlab-simulink-with-hercules-rm57x\"><a class=\"anchor\" href=\"#use-matlab-simulink-with-hercules-rm57x\">#</a> Use MATLAB Simulink with Hercules RM57x</h2>\n<h3 id=\"set-up\"><a class=\"anchor\" href=\"#set-up\">#</a> Set Up</h3>\n<ul>\n<li>\n<p><strong>Pre-requisite</strong></p>\n<ul>\n<li>MATLAB Embedded Cortex-R</li>\n<li>Code composer with specific version of code generation tools compiler installed</li>\n</ul>\n</li>\n<li>\n<p>Install Cortex-R adds-on<br />\n<img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201128150811124.png\" alt=\"image-20201128150811124\" /></p>\n<ul>\n<li>\n<p>The package toolchain may be outdated, the latest code composer version is v10, but only v5 and v6 are present.<br />\n<img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201128151129927.png\" alt=\"image-20201128151129927\" /></p>\n</li>\n<li>\n<p>Make sure the version matches<br />\n<img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201128151213973.png\" alt=\"image-20201128151213973\" /></p>\n</li>\n<li>\n<p>Looks like ccsv6 has different file structure comparing with ccsv10. So installed ccsv6.</p>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201128152234251.png\" alt=\"image-20201128152234251\" /><br />\n<img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128161503273.png\" alt=\"image-20201128161503273\" /></p>\n<p>This works<img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201128161532729.png\" alt=\"image-20201128161532729\" /><br />\n<img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201128161816355.png\" alt=\"image-20201128161816355\" /><br />\n<img data-src=\"C:%5CUsers%5Ckydn8%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201128161825513.png\" alt=\"image-20201128161825513\" /></p>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201128161857315.png\" alt=\"image-20201128161857315\" /><br />\n<img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201128161914373.png\" alt=\"image-20201128161914373\" /></p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"run-demo-code\"><a class=\"anchor\" href=\"#run-demo-code\">#</a> Run Demo Code</h3>\n<ul>\n<li>Remember to switch the directory</li>\n</ul>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2JpZmVpdGFuZy9ibG9nLWltZy1ob3N0aW5nLXlhbmcvbWFzdGVyL2FydGljbGVfaW1ncy9pbWFnZS0yMDIwMTEyODE3NDc0NzczNi5wbmc=\">https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201128174747736.png</span>&quot; alt=&quot;image-20201128174747736&quot; style=&quot;zoom:100%;&quot; /&gt;</p>\n<ul>\n<li>\n<p>Change the directory from <em><strong>C:\\Program Files\\Polyspace\\R2020a\\bin</strong></em> to your own drive<br />\n<img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201128175033477.png\" alt=\"image-20201128175033477\" /></p>\n</li>\n<li>\n<p>Second bug is I used  <code>&amp;</code>  in my folder name which confused the compiler.</p>\n</li>\n<li>\n<p>Eventually I am able to deploy and build<br />\n<img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201128183655265.png\" alt=\"image-20201128183655265\" /></p>\n<p>But there's no command window pop up as stated in the example</p>\n<blockquote>\n<p>After the model launches on the hardware, a command window opens and shows that the executable is running on in the TI Hercules RM57Lx LaunchPad Development Kit. To stop the model running on the TI Hercules RM57Lx LaunchPad Development Kit, close the command window.</p>\n</blockquote>\n<p>I suspect it's due to the warning</p>\n<blockquote>\n<p>All blocks in block diagram '<span class=\"exturl\" data-url=\"bWF0bGFiOm9wZW5fc3lzdGVt\">arm_cortex_r_gettingstarted</span>' are either virtual or have been removed by block reduction optimization or they are inactive variants, therefore there is nothing to simulate. Note, for code generation, block reduction optimization removes all diagram branches terminating in sink blocks that do not participate in code generation. For example, To Workspace blocks and potentially their sources are removed when the <span class=\"exturl\" data-url=\"bWF0bGFiOmNvbmZpZ3NldC5pbnRlcm5hbC5vcGVuKCdhcm1fY29ydGV4X3JfZ2V0dGluZ3N0YXJ0ZWQnLCdNYXRGaWxlTG9nZ2luZycpOw==\">MAT-file logging</span> is off.</p>\n<p>Component:Simulink | Category:Block diagram warning</p>\n</blockquote>\n<ul>\n<li><strong>Can't connect to hardware board</strong><br />\n<img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20201129140320119.png\" alt=\"image-20201129140320119\" />\n<ul>\n<li>Followed the question here <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWF0aHdvcmtzLmNvbS9tYXRsYWJjZW50cmFsL2Fuc3dlcnMvNjIyMzczLWVtYmVkZGVkLWNvZGVyLWZvci1hcm0tY29ydGV4LXItcHJvY2Vzc29ycy1oZXJjdWxlcy10bXM1NzBsYzQzeA==\">https://www.mathworks.com/matlabcentral/answers/622373-embedded-coder-for-arm-cortex-r-processors-hercules-tms570lc43x</span></li>\n</ul>\n</li>\n<li></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"check-list\"><a class=\"anchor\" href=\"#check-list\">#</a> Check List</h2>\n<ul class=\"task-list\">\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_1\" disabled=\"true\" /><label for=\"cbx_1\"> Be able to compile and upload code to the Teensy</label></p>\n<ul>\n<li>Clean, blink LED test</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oYW5nb3V0cy5nb29nbGUuY29tL18vZWxVaS9jaGF0LXJlZGlyZWN0P2F1dGh1c2VyPTEmYW1wO2Rlc3Q9aHR0cHMlM0ElMkYlMkZ3d3cuYXJkdWluby5jYyUyRmVuJTJGVHV0b3JpYWwlMkZCdWlsdEluRXhhbXBsZXMlMkZCbGluaw==\">https://www.arduino.cc/en/Tutorial/BuiltInExamples/Blink</span></li>\n<li>#define LED 13</li>\n</ul>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\" /><label for=\"cbx_2\"> Luu will send the CAN send/receive code</label></p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_3\" disabled=\"true\" /><label for=\"cbx_3\"> CAN Analyzer, microchip</label></p>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_4\" disabled=\"true\" /><label for=\"cbx_4\"> After the communication between Tessny-&gt; Hercules Data</label></p>\n<ul>\n<li>\n<p>Logging</p>\n</li>\n<li>\n<p>Timestamp, sampling rate, every signgle frame</p>\n</li>\n<li>\n<p>Will log the data into as Restful API call, Json format</p>\n<ul>\n<li>200 Hz, every frame, log into the Json file 0.005</li>\n</ul>\n</li>\n</ul>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_5\" disabled=\"true\" /><label for=\"cbx_5\"> nikunj bhagat</label></p>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_7-23-2021/",
            "url": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_7-23-2021/",
            "title": "",
            "date_published": "2021-08-16T03:19:05.860Z",
            "content_html": "<h2 id=\"heartbeat-from-hercules-to-teensy\"><a class=\"anchor\" href=\"#heartbeat-from-hercules-to-teensy\">#</a> Heartbeat from Hercules to Teensy</h2>\n<ul>\n<li>\n<p>Heartbeat Task design</p>\n<ul>\n<li>Hercules -&gt; Teensy: send heartbeat to all teensy nodes every 200ms</li>\n<li>Teensy corresponding node reply with it's current angle</li>\n</ul>\n</li>\n<li>\n<p>Major code from Hercules</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">HeartBeatTask</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>pvParameters<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    TickType_t xNextWakeTime<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    xNextWakeTime <span class=\"token operator\">=</span> <span class=\"token function\">xTaskGetTickCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">vTaskDelayUntil</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>xNextWakeTime<span class=\"token punctuation\">,</span> mainHEARTBEAT_FREQUENCY_MS <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">7</span> <span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token class-name\">uint32_t</span> canID <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">char</span> data <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token function\">HerculesCANWrite</span><span class=\"token punctuation\">(</span>canID<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>data<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token function\">DbgPrint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Send HeartBeat Message from CAN bus\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n<li>\n<p>Major code from Teensy</p>\n<pre><code class=\"language-c++\">if (CANbus.available()) &#123;\n        CANbus.read(rxCANmsg);\n        if (rxCANmsg.id == 2 &amp;&amp; rxCANmsg.buf[0] == '1')\n        &#123;\n          Serial.println((String) &quot;Receive Hear Beat CAN message&quot;);\n          Serial.println((String) &quot;Reply with Joint Angle&quot; + jointCAN.frame.buf[0] + &quot;-&quot; + jointCAN.frame.buf[1]);\n          CANbus.write(jointCAN.frame);\n        &#125;\n    &#125;\n\n</code></pre>\n</li>\n<li>\n<p>Screenshot</p>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/image-20210723010627617.png\" alt=\"image-20210723010627617\" /></p>\n</li>\n<li>\n<p>Please find gif from attachment</p>\n</li>\n</ul>\n<p><img data-src=\"https://raw.githubusercontent.com/bifeitang/blog-img-hosting-yang/master/article_imgs/HerculesHearBeatResponseSingleNode.gif\" alt=\"HerculesHearBeatResponseSingleNode\" /></p>\n",
            "tags": []
        },
        {
            "id": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_03-13-2021/",
            "url": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_03-13-2021/",
            "title": "",
            "date_published": "2021-08-16T03:19:05.847Z",
            "content_html": "<h2 id=\"hercules_migrate_update_03-13-2021\"><a class=\"anchor\" href=\"#hercules_migrate_update_03-13-2021\">#</a> Hercules_Migrate_Update_03-13-2021</h2>\n<h4 id=\"task-creation-in-another-task\"><a class=\"anchor\" href=\"#task-creation-in-another-task\">#</a> Task creation in another task</h4>\n<ul>\n<li>it is perfectly ok to create tasks from inside other tasks.</li>\n<li>Any call to  <code>xTaskCreate()</code>  will allocate a TCB structure and stack for that task. No matter where the task gets created (from  a  function or another task), they will be in the separated memory. Say  <code>TaskX</code>  is created, without deleting  <code>TaskX</code> ,  <code>TaskY</code>  is also created. Then two tasks won't use the same memory because both calls to  <code>xTaskCreate()</code>  will allocate separated RAM.</li>\n</ul>\n<h4 id=\"passing-parameters-to-task\"><a class=\"anchor\" href=\"#passing-parameters-to-task\">#</a> Passing Parameters to Task</h4>\n<ul>\n<li>Ref\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaGFja3N0ZXIuaW8vTmlrZXQvdGFza3MtcGFyYW1ldGVydG90YXNrcy1mcmVlcnRvcy10dXRvcmlhbC01LWI4YTdiNw==\">https://www.hackster.io/Niket/tasks-parametertotasks-freertos-tutorial-5-b8a7b7</span></li>\n</ul>\n</li>\n</ul>\n<h4 id=\"taskdelayuntil\"><a class=\"anchor\" href=\"#taskdelayuntil\">#</a> TaskDelayUntil</h4>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* The rate at which data is sent to the queue.  The 200ms value is converted</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>to ticks using the portTICK_PERIOD_MS constant. */</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">mainQUEUE_SEND_FREQUENCY_MS</span>\t\t\t<span class=\"token expression\"><span class=\"token punctuation\">(</span> <span class=\"token number\">200</span> <span class=\"token operator\">/</span> portTICK_PERIOD_MS <span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>xNextWakeTime <span class=\"token operator\">=</span> <span class=\"token function\">xTaskGetTickCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">/* Place this task in the blocked state until it is time to run again. The block time is specified in ticks, the constant used converts ticks to ms.  While in the Blocked state this task will not consume any CPU time. */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">vTaskDelayUntil</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>xNextWakeTime<span class=\"token punctuation\">,</span> mainQUEUE_SEND_FREQUENCY_MS <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h4 id=\"freertos-task-name\"><a class=\"anchor\" href=\"#freertos-task-name\">#</a> FreeRTOS Task Name</h4>\n<p>1</p>\n<p>I'm a newbie of FreeRTOS. But I don't think it's well documented. As in <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZnJlZXJ0b3Mub3JnL2EwMDEyNS5odG1s\">xTaskCreate()</span> :</p>\n<blockquote>\n<p><code>pcName</code>  A descriptive name for the task. This is mainly used to facilitate debugging, but can also be used to obtain a task handle. The maximum length of a task’s name is set using the  <code>configMAX_TASK_NAME_LEN</code>  parameter in  <code>FreeRTOSConfig.h</code> .</p>\n</blockquote>\n<ol>\n<li>Is a task must be associated with a name?\n<ul>\n<li>No it does not need a name</li>\n</ul>\n</li>\n<li>What happened if  <code>pcName</code>  is NULL?\n<ul>\n<li>If  <code>pcName</code>  is  <code>NULL</code>  it simply does not have a name. Nothing happens.</li>\n</ul>\n</li>\n<li>What happened if I created multiple tasks with the same name?\n<ul>\n<li>You will get several tasks with the same name so you cannot identify them by name. The behavior of  <code>xTaskGetHandle</code>  is then undefined (as per the documentation).</li>\n</ul>\n</li>\n<li>Should I maintain the mapping between task's handle and name? Or FreeRTOS maintains this relation?\n<ul>\n<li>FreeRTOS handles this.</li>\n</ul>\n</li>\n</ol>\n<p>To Do</p>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_0\" disabled=\"true\" /><label for=\"cbx_0\"> Make debug message take parameter, use vector convention</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_1\" disabled=\"true\" /><label for=\"cbx_1\"> Write a circular buffer to record the mapping information between hashcode and command sending state</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\" /><label for=\"cbx_2\"> Explore other simpler data structure since our commands to won't be too much</label>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" disabled=\"true\" /><label for=\"cbx_3\"> Command we send are usually in sequence, FIFO</label></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" disabled=\"true\" /><label for=\"cbx_4\"> Read emergency, we can start a highest priority task, to handle all the emergency</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_5\" disabled=\"true\" /><label for=\"cbx_5\"> Put all the priority define into one dedicated file</label></li>\n<li>[ ]</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_02-28-2020/",
            "url": "https://bifeitang.github.io/2021/08/15/ExoSkeleton/Hercules_Migrate_Update_02-28-2020/",
            "title": "",
            "date_published": "2021-08-16T03:19:05.817Z",
            "content_html": "<h2 id=\"review-state-machine-event-driven-programming\"><a class=\"anchor\" href=\"#review-state-machine-event-driven-programming\">#</a> Review State Machine Event Driven Programming</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc3RhdGUtbWFjaGluZS5jb20vZXZlbnQtZHJpdmVuLXByb2dyYW1taW5nLw==\">https://www.state-machine.com/event-driven-programming/</span></p>\n<ul class=\"task-list\">\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_0\" checked=\"true\" disabled=\"true\" /><label for=\"cbx_0\"> Object oriented flavor with  <code>wnd</code>  object</label></p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wnd<span class=\"token punctuation\">.</span>cbSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>wnd<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_1\" disabled=\"true\" /><label for=\"cbx_1\">  <code>EventLoop</code> , with message loop and message pump</label></p>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_2\" disabled=\"true\" /><label for=\"cbx_2\"> 1. use a special  <code>object</code>  to record all the events potentially interesting to an application, this object is only used for communication and can be conveniently stored in the event queue, and later retrieved for processing. Can provide  <code>asynchronous</code>  processing</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_3\" disabled=\"true\" /><label for=\"cbx_3\"> 2.  <code>DispatchMessage</code>  must complete and return to the event-loop before the loop goes to the next event. (Event processing proceeds in Run-to-Completion (RTC)). Realize  <code>inversion of control</code>  for the event driven.</label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_4\" disabled=\"true\" /><label for=\"cbx_4\">  <code>GetMessage</code>  unblock, take the message from the queue, place it to the object</label></li>\n</ul>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" id=\"cbx_5\" disabled=\"true\" /><label for=\"cbx_5\">  <code>Event-driven</code>  programming should be separated from  <code>sequential</code>  programming</label></p>\n<ul class=\"task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_6\" disabled=\"true\" /><label for=\"cbx_6\"> E.g. instead of using  <code>sleep</code> , use  <code>SetTimer()</code> </label></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"cbx_7\" disabled=\"true\" /><label for=\"cbx_7\"> This is a perfect way to delegate a command to sleep and wake up later</label></li>\n</ul>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://bifeitang.github.io/2021/08/15/hello-world/",
            "url": "https://bifeitang.github.io/2021/08/15/hello-world/",
            "title": "Hello World",
            "date_published": "2021-08-15T15:34:39.485Z",
            "content_html": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n",
            "tags": []
        }
    ]
}